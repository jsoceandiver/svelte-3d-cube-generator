{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/svelte/store/index.mjs","../../src/DAL/storage-provider.js","../../src/DAL/store.js","../../src/UI/Controls/Controls.svelte","../../node_modules/prismjs/prism.js","../../src/domain/color-provider.js","../../src/domain/source-code-provider.js","../../src/domain/copy-provider.js","../../src/UI/CodePanel/CodePanel.svelte","../../src/UI/Preview/Preview.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot_spread(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_spread_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_spread_changes_fn(dirty) | get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            const remove = [];\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j++];\n                if (!attributes[attribute.name]) {\n                    remove.push(attribute.name);\n                }\n            }\n            for (let k = 0; k < remove.length; k++) {\n                node.removeAttribute(remove[k]);\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(anchor = null) {\n        this.a = anchor;\n        this.e = this.n = null;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.h(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : context || []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : options.context || []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.37.0' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to seperate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_custom_elements_slots, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, update_slot, update_slot_spread, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (let i = 0; i < subscribers.length; i += 1) {\n                    const s = subscribers[i];\n                    s[1]();\n                    subscriber_queue.push(s, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","const KEY = 'css-3d-cube-gen';\n\n/**\n * save data to the storage\n * @param {object} data\n */\nexport const saveToStorage = data => {\n    if(!window.localStorage) return;\n    const value = encodeURIComponent(JSON.stringify(data));\n    window.localStorage.setItem(KEY, value);\n};\n\n/**\n * get value from storage\n * @return {object|null}\n */\nexport const getFromStorage = () => {\n    if(!window.localStorage) return null;\n\n    let value = null;\n\n    try{\n        value = JSON.parse(decodeURIComponent(window.localStorage.getItem(KEY)));\n    }\n    catch(ex){}\n\n    if(!value) return null;\n    return value;\n};","import { writable } from 'svelte/store';\nimport { getFromStorage } from './storage-provider';\n\n// try get data from the storage\nconst dataFromStorage = getFromStorage();\n\n/**\n * get string value\n * @param {string} name\n * @param {string} defaultValue\n * @return {*}\n */\nconst getStringValue = (name, defaultValue) => {\n    if(!dataFromStorage || !dataFromStorage[name]) return defaultValue;\n    return dataFromStorage[name];\n};\n\n/**\n * init the store\n * @type {Writable<{}>}\n */\nconst store = writable({\n\n    // animation\n    rotationType: getStringValue('rotationType', 'y'),\n    easingType: getStringValue('easingType', 'linear'), // ease, ease-in, ease-in-out, linear, cubic-bezier(x1, y1, x2, y2)\n    duration: dataFromStorage && !isNaN(Number(dataFromStorage.duration)) ? dataFromStorage.duration : 4, // sec\n\n    // texts\n    leftFaceText: getStringValue('leftFaceText', 'Left'),\n    rightFaceText: getStringValue('rightFaceText', 'Right'),\n    topFaceText: getStringValue('topFaceText', 'Top'),\n    bottomFaceText: getStringValue('bottomFaceText', 'Bottom'),\n    frontFaceText: getStringValue('frontFaceText', 'Front'),\n    backFaceText: getStringValue('Back', 'Front'),\n\n    // background colors\n    leftFaceBgColor: getStringValue('leftFaceBgColor', '#a178d3'),\n    rightFaceBgColor: getStringValue('rightFaceBgColor', '#78a9d3'),\n    topFaceBgColor: getStringValue('topFaceBgColor', '#788fd3'),\n    bottomFaceBgColor: getStringValue('bottomFaceBgColor', '#78d3ac'),\n    frontFaceBgColor: getStringValue('frontFaceBgColor', '#98d378'),\n    backFaceBgColor: getStringValue('backFaceBgColor', '#78d2d3'),\n\n    // size\n    width: dataFromStorage && !isNaN(Number(dataFromStorage.width)) ? dataFromStorage.width : 290,\n    height: dataFromStorage && !isNaN(Number(dataFromStorage.height)) ? dataFromStorage.height : 270,\n    depth: dataFromStorage && !isNaN(Number(dataFromStorage.depth)) ? dataFromStorage.depth : 190,\n\n    // font\n    fontSize: dataFromStorage && !isNaN(Number(dataFromStorage.fontSize)) ? dataFromStorage.fontSize : 1.5 // rem\n});\n\nexport default store;","<style src=\"./Controls.css\"></style>\n\n<script>\n    import store from '../../DAL/store';\n    import { saveToStorage } from '../../DAL/storage-provider';\n\n    /**\n     * update for field\n     * @param {string} field\n     * @param {*} value\n     */\n    const updateFormField = (field, value) => {\n\n        store.update(currentStore => {\n\n            const updated = {\n                ...currentStore,\n                [field]: value\n            }\n\n            saveToStorage(updated);\n\n            return updated;\n        });\n    };\n\n    // $: console.log($store);\n</script>\n\n<form class=\"controls\">\n\n    <fieldset class=\"control\">\n        <legend>Rotation Types</legend>\n\n        <div>\n            <input\n                    type=\"radio\"\n                    id=\"horizontal-rotation-radio\"\n                    value=\"y\"\n                    name=\"rotation-type\"\n                    bind:group={$store.rotationType}\n                    on:change={evt => { updateFormField('rotationType', evt.target.value) }}\n            />\n            <label for=\"horizontal-rotation-radio\">Horizontal Rotation</label>\n        </div>\n\n        <div>\n            <input\n                    type=\"radio\"\n                    id=\"vertical-rotation-radio\"\n                    value=\"x\"\n                    name=\"rotation-type\"\n                    bind:group={$store.rotationType}\n                    on:change={evt => { updateFormField('rotationType', evt.target.value) }}\n            />\n            <label for=\"vertical-rotation-radio\">Vertical Rotation</label>\n        </div>\n\n        <div>\n            <input\n                    type=\"radio\"\n                    id=\"z-rotation-radio\"\n                    value=\"z\"\n                    name=\"rotation-type\"\n                    bind:group={$store.rotationType}\n                    on:change={evt => { updateFormField('rotationType', evt.target.value) }}\n            />\n            <label for=\"z-rotation-radio\">Z-Rotation</label>\n        </div>\n\n        <div>\n            <input\n                    type=\"radio\"\n                    id=\"xy-rotation-radio\"\n                    value=\"xy\"\n                    name=\"rotation-type\"\n                    bind:group={$store.rotationType}\n                    on:change={evt => { updateFormField('rotationType', evt.target.value) }}\n            />\n            <label for=\"xy-rotation-radio\">XY-Rotation</label>\n        </div>\n\n        <div>\n            <input\n                    type=\"radio\"\n                    id=\"xyz-rotation-radio\"\n                    value=\"xyz\"\n                    name=\"rotation-type\"\n                    bind:group={$store.rotationType}\n                    on:change={evt => { updateFormField('rotationType', evt.target.value) }}\n            />\n            <label for=\"xyz-rotation-radio\">XYZ-Rotation</label>\n        </div>\n\n        <div>\n            <input\n                    type=\"radio\"\n                    id=\"combined-rotation-radio\"\n                    value=\"combined\"\n                    name=\"rotation-type\"\n                    bind:group={$store.rotationType}\n                    on:change={evt => { updateFormField('rotationType', evt.target.value) }}\n            />\n            <label for=\"combined-rotation-radio\">Combined Rotation</label>\n        </div>\n    </fieldset>\n\n    <fieldset class=\"control\">\n        <legend>Easing</legend>\n\n        <div>\n            <input\n                    type=\"radio\"\n                    id=\"linear-easing-radio\"\n                    value=\"linear\"\n                    name=\"easing-type\"\n                    bind:group={$store.easingType}\n                    on:change={evt => { updateFormField('easingType', evt.target.value) }}\n            />\n            <label for=\"linear-easing-radio\">Linear</label>\n        </div>\n\n        <div>\n            <input\n                    type=\"radio\"\n                    id=\"ease-easing-radio\"\n                    value=\"ease\"\n                    name=\"easing-type\"\n                    bind:group={$store.easingType}\n                    on:change={evt => { updateFormField('easingType', evt.target.value) }}\n            />\n            <label for=\"ease-easing-radio\">Ease</label>\n        </div>\n\n        <div>\n            <input\n                    type=\"radio\"\n                    id=\"ease-in-easing-radio\"\n                    value=\"ease-in\"\n                    name=\"easing-type\"\n                    bind:group={$store.easingType}\n                    on:change={evt => { updateFormField('easingType', evt.target.value) }}\n            />\n            <label for=\"ease-in-easing-radio\">Ease-In</label>\n        </div>\n\n        <div>\n            <input\n                    type=\"radio\"\n                    id=\"ease-in-out-easing-radio\"\n                    value=\"ease-in-out\"\n                    name=\"easing-type\"\n                    bind:group={$store.easingType}\n                    on:change={evt => { updateFormField('easingType', evt.target.value) }}\n            />\n            <label for=\"ease-in-out-easing-radio\">Ease-In-Out</label>\n        </div>\n\n    </fieldset>\n\n   <div class=\"control\">\n         <label for=\"width-range\">Width <small>({$store.width}px)</small></label>\n         <input\n                 type=\"range\"\n                 id=\"width-range\"\n                 min=\"100\"\n                 max=\"800\"\n                 value=\"{$store.width}\"\n                 on:input={evt => updateFormField('width', Number(evt.target.value) || 200) }\n         />\n     </div>\n\n     <div class=\"control\">\n         <label for=\"height-range\">Height <small>({$store.height}px)</small></label>\n         <input\n                 type=\"range\"\n                 id=\"height-range\"\n                 min=\"100\"\n                 max=\"800\"\n                 value=\"{$store.height}\"\n                 on:input={evt => updateFormField('height', Number(evt.target.value) || 200) }\n         />\n     </div>\n\n     <div class=\"control\">\n         <label for=\"height-range\">Depth <small>({$store.depth}px)</small></label>\n         <input\n                 type=\"range\"\n                 id=\"depth-range\"\n                 min=\"100\"\n                 max=\"800\"\n                 value=\"{$store.depth}\"\n                 on:input={evt => updateFormField('depth', Number(evt.target.value) || 200) }\n         />\n     </div>\n\n     <div class=\"control\">\n         <label for=\"duration-range\">Animation Duration  <small>({$store.duration}s)</small></label>\n         <input\n                 type=\"range\"\n                 id=\"duration-range\"\n                 min=\"0.1\"\n                 max=\"10\"\n                 step=\"0.1\"\n                 value=\"{$store.duration}\"\n                 on:input={evt => updateFormField('duration', Number(evt.target.value) || 4) }\n         />\n     </div>\n\n    <div class=\"control\">\n       <label for=\"font-size-range\">Font Size  <small>({$store.fontSize}rem)</small></label>\n       <input\n               type=\"range\"\n               id=\"font-size-range\"\n               min=\"0.5\"\n               max=\"5\"\n               step=\"0.5\"\n               value=\"{$store.fontSize}\"\n               on:input={evt => updateFormField('fontSize', Number(evt.target.value) || 1.5) }\n       />\n   </div>\n\n   <hr class=\"control-line\" />\n\n   <div class=\"control\">\n       <label for=\"front-text-tb-tb\">Front Text</label>\n       <input type=\"text\" id=\"front-text-tb-tb\" value=\"{$store.frontFaceText}\" on:input={evt => updateFormField('frontFaceText', evt.target.value) } />\n   </div>\n\n   <div class=\"control\">\n       <label for=\"back-text-tb\">Back Text</label>\n       <input type=\"text\" id=\"back-text-tb\" value=\"{$store.backFaceText}\" on:input={evt => updateFormField('backFaceText', evt.target.value) } />\n   </div>\n\n   <div class=\"control\">\n       <label for=\"left-text-tb-tb\">Left Text</label>\n       <input type=\"text\" id=\"left-text-tb-tb\" value=\"{$store.leftFaceText}\" on:input={evt => updateFormField('leftFaceText', evt.target.value) } />\n   </div>\n\n   <div class=\"control\">\n       <label for=\"right-text-tb\">Right Text</label>\n       <input type=\"text\" id=\"right-text-tb\" value=\"{$store.rightFaceText}\" on:input={evt => updateFormField('rightFaceText', evt.target.value) } />\n   </div>\n\n   <div class=\"control\">\n       <label for=\"top-text-tb-tb\">Top Text</label>\n       <input type=\"text\" id=\"top-text-tb-tb\" value=\"{$store.topFaceText}\" on:input={evt => updateFormField('topFaceText', evt.target.value) } />\n   </div>\n\n   <div class=\"control\">\n       <label for=\"bottom-text-tb\">Bottom Text</label>\n       <input type=\"text\" id=\"bottom-text-tb\" value=\"{$store.bottomFaceText}\" on:input={evt => updateFormField('bottomFaceText', evt.target.value) } />\n   </div>\n\n   <hr class=\"control-line\" />\n\n    <div class=\"control one-row\">\n        <input type=\"color\" id=\"front-face-bg-color-tb\" value={$store.frontFaceBgColor} on:input={evt => updateFormField('frontFaceBgColor', evt.target.value) } />\n        <label for=\"front-face-bg-color-tb\">Front Face BG Color</label>\n    </div>\n\n    <div class=\"control one-row\">\n        <input type=\"color\" id=\"back-face-bg-color-tb\" value={$store.backFaceBgColor} on:input={evt => updateFormField('backFaceBgColor', evt.target.value) } />\n        <label for=\"back-face-bg-color-tb\">Back Face BG Color</label>\n    </div>\n\n    <div class=\"control one-row\">\n        <input type=\"color\" id=\"left-face-bg-color-tb\" value={$store.leftFaceBgColor} on:input={evt => updateFormField('leftFaceBgColor', evt.target.value) } />\n        <label for=\"left-face-bg-color-tb\">Left Face BG Color</label>\n    </div>\n\n    <div class=\"control one-row\">\n        <input type=\"color\" id=\"right-face-bg-color-tb\" value={$store.rightFaceBgColor} on:input={evt => updateFormField('rightFaceBgColor', evt.target.value) } />\n        <label for=\"right-face-bg-color-tb\">Right Face BG Color</label>\n    </div>\n\n    <div class=\"control one-row\">\n        <input type=\"color\" id=\"top-face-bg-color-tb\" value={$store.topFaceBgColor} on:input={evt => updateFormField('topFaceBgColor', evt.target.value) } />\n        <label for=\"top-face-bg-color-tb\">Top Face BG Color</label>\n    </div>\n\n    <div class=\"control one-row\">\n        <input type=\"color\" id=\"bottom-face-bg-color-tb\" value={$store.bottomFaceBgColor} on:input={evt => updateFormField('bottomFaceBgColor', evt.target.value) } />\n        <label for=\"bottom-face-bg-color-tb\">Bottom Face BG Color</label>\n    </div>\n\n</form>\n\n\n\n","\n/* **********************************************\n     Begin prism-core.js\n********************************************** */\n\n/// <reference lib=\"WebWorker\"/>\n\nvar _self = (typeof window !== 'undefined')\n\t? window   // if in browser\n\t: (\n\t\t(typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope)\n\t\t? self // if in worker\n\t\t: {}   // if in node js\n\t);\n\n/**\n * Prism: Lightweight, robust, elegant syntax highlighting\n *\n * @license MIT <https://opensource.org/licenses/MIT>\n * @author Lea Verou <https://lea.verou.me>\n * @namespace\n * @public\n */\nvar Prism = (function (_self){\n\n// Private helper vars\nvar lang = /\\blang(?:uage)?-([\\w-]+)\\b/i;\nvar uniqueId = 0;\n\n\nvar _ = {\n\t/**\n\t * By default, Prism will attempt to highlight all code elements (by calling {@link Prism.highlightAll}) on the\n\t * current page after the page finished loading. This might be a problem if e.g. you wanted to asynchronously load\n\t * additional languages or plugins yourself.\n\t *\n\t * By setting this value to `true`, Prism will not automatically highlight all code elements on the page.\n\t *\n\t * You obviously have to change this value before the automatic highlighting started. To do this, you can add an\n\t * empty Prism object into the global scope before loading the Prism script like this:\n\t *\n\t * ```js\n\t * window.Prism = window.Prism || {};\n\t * Prism.manual = true;\n\t * // add a new <script> to load Prism's script\n\t * ```\n\t *\n\t * @default false\n\t * @type {boolean}\n\t * @memberof Prism\n\t * @public\n\t */\n\tmanual: _self.Prism && _self.Prism.manual,\n\tdisableWorkerMessageHandler: _self.Prism && _self.Prism.disableWorkerMessageHandler,\n\n\t/**\n\t * A namespace for utility methods.\n\t *\n\t * All function in this namespace that are not explicitly marked as _public_ are for __internal use only__ and may\n\t * change or disappear at any time.\n\t *\n\t * @namespace\n\t * @memberof Prism\n\t */\n\tutil: {\n\t\tencode: function encode(tokens) {\n\t\t\tif (tokens instanceof Token) {\n\t\t\t\treturn new Token(tokens.type, encode(tokens.content), tokens.alias);\n\t\t\t} else if (Array.isArray(tokens)) {\n\t\t\t\treturn tokens.map(encode);\n\t\t\t} else {\n\t\t\t\treturn tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\\u00a0/g, ' ');\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Returns the name of the type of the given value.\n\t\t *\n\t\t * @param {any} o\n\t\t * @returns {string}\n\t\t * @example\n\t\t * type(null)      === 'Null'\n\t\t * type(undefined) === 'Undefined'\n\t\t * type(123)       === 'Number'\n\t\t * type('foo')     === 'String'\n\t\t * type(true)      === 'Boolean'\n\t\t * type([1, 2])    === 'Array'\n\t\t * type({})        === 'Object'\n\t\t * type(String)    === 'Function'\n\t\t * type(/abc+/)    === 'RegExp'\n\t\t */\n\t\ttype: function (o) {\n\t\t\treturn Object.prototype.toString.call(o).slice(8, -1);\n\t\t},\n\n\t\t/**\n\t\t * Returns a unique number for the given object. Later calls will still return the same number.\n\t\t *\n\t\t * @param {Object} obj\n\t\t * @returns {number}\n\t\t */\n\t\tobjId: function (obj) {\n\t\t\tif (!obj['__id']) {\n\t\t\t\tObject.defineProperty(obj, '__id', { value: ++uniqueId });\n\t\t\t}\n\t\t\treturn obj['__id'];\n\t\t},\n\n\t\t/**\n\t\t * Creates a deep clone of the given object.\n\t\t *\n\t\t * The main intended use of this function is to clone language definitions.\n\t\t *\n\t\t * @param {T} o\n\t\t * @param {Record<number, any>} [visited]\n\t\t * @returns {T}\n\t\t * @template T\n\t\t */\n\t\tclone: function deepClone(o, visited) {\n\t\t\tvisited = visited || {};\n\n\t\t\tvar clone, id;\n\t\t\tswitch (_.util.type(o)) {\n\t\t\t\tcase 'Object':\n\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t}\n\t\t\t\t\tclone = /** @type {Record<string, any>} */ ({});\n\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\tfor (var key in o) {\n\t\t\t\t\t\tif (o.hasOwnProperty(key)) {\n\t\t\t\t\t\t\tclone[key] = deepClone(o[key], visited);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn /** @type {any} */ (clone);\n\n\t\t\t\tcase 'Array':\n\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t}\n\t\t\t\t\tclone = [];\n\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\t(/** @type {Array} */(/** @type {any} */(o))).forEach(function (v, i) {\n\t\t\t\t\t\tclone[i] = deepClone(v, visited);\n\t\t\t\t\t});\n\n\t\t\t\t\treturn /** @type {any} */ (clone);\n\n\t\t\t\tdefault:\n\t\t\t\t\treturn o;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Returns the Prism language of the given element set by a `language-xxxx` or `lang-xxxx` class.\n\t\t *\n\t\t * If no language is set for the element or the element is `null` or `undefined`, `none` will be returned.\n\t\t *\n\t\t * @param {Element} element\n\t\t * @returns {string}\n\t\t */\n\t\tgetLanguage: function (element) {\n\t\t\twhile (element && !lang.test(element.className)) {\n\t\t\t\telement = element.parentElement;\n\t\t\t}\n\t\t\tif (element) {\n\t\t\t\treturn (element.className.match(lang) || [, 'none'])[1].toLowerCase();\n\t\t\t}\n\t\t\treturn 'none';\n\t\t},\n\n\t\t/**\n\t\t * Returns the script element that is currently executing.\n\t\t *\n\t\t * This does __not__ work for line script element.\n\t\t *\n\t\t * @returns {HTMLScriptElement | null}\n\t\t */\n\t\tcurrentScript: function () {\n\t\t\tif (typeof document === 'undefined') {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tif ('currentScript' in document && 1 < 2 /* hack to trip TS' flow analysis */) {\n\t\t\t\treturn /** @type {any} */ (document.currentScript);\n\t\t\t}\n\n\t\t\t// IE11 workaround\n\t\t\t// we'll get the src of the current script by parsing IE11's error stack trace\n\t\t\t// this will not work for inline scripts\n\n\t\t\ttry {\n\t\t\t\tthrow new Error();\n\t\t\t} catch (err) {\n\t\t\t\t// Get file src url from stack. Specifically works with the format of stack traces in IE.\n\t\t\t\t// A stack will look like this:\n\t\t\t\t//\n\t\t\t\t// Error\n\t\t\t\t//    at _.util.currentScript (http://localhost/components/prism-core.js:119:5)\n\t\t\t\t//    at Global code (http://localhost/components/prism-core.js:606:1)\n\n\t\t\t\tvar src = (/at [^(\\r\\n]*\\((.*):.+:.+\\)$/i.exec(err.stack) || [])[1];\n\t\t\t\tif (src) {\n\t\t\t\t\tvar scripts = document.getElementsByTagName('script');\n\t\t\t\t\tfor (var i in scripts) {\n\t\t\t\t\t\tif (scripts[i].src == src) {\n\t\t\t\t\t\t\treturn scripts[i];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Returns whether a given class is active for `element`.\n\t\t *\n\t\t * The class can be activated if `element` or one of its ancestors has the given class and it can be deactivated\n\t\t * if `element` or one of its ancestors has the negated version of the given class. The _negated version_ of the\n\t\t * given class is just the given class with a `no-` prefix.\n\t\t *\n\t\t * Whether the class is active is determined by the closest ancestor of `element` (where `element` itself is\n\t\t * closest ancestor) that has the given class or the negated version of it. If neither `element` nor any of its\n\t\t * ancestors have the given class or the negated version of it, then the default activation will be returned.\n\t\t *\n\t\t * In the paradoxical situation where the closest ancestor contains __both__ the given class and the negated\n\t\t * version of it, the class is considered active.\n\t\t *\n\t\t * @param {Element} element\n\t\t * @param {string} className\n\t\t * @param {boolean} [defaultActivation=false]\n\t\t * @returns {boolean}\n\t\t */\n\t\tisActive: function (element, className, defaultActivation) {\n\t\t\tvar no = 'no-' + className;\n\n\t\t\twhile (element) {\n\t\t\t\tvar classList = element.classList;\n\t\t\t\tif (classList.contains(className)) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\tif (classList.contains(no)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\telement = element.parentElement;\n\t\t\t}\n\t\t\treturn !!defaultActivation;\n\t\t}\n\t},\n\n\t/**\n\t * This namespace contains all currently loaded languages and the some helper functions to create and modify languages.\n\t *\n\t * @namespace\n\t * @memberof Prism\n\t * @public\n\t */\n\tlanguages: {\n\t\t/**\n\t\t * Creates a deep copy of the language with the given id and appends the given tokens.\n\t\t *\n\t\t * If a token in `redef` also appears in the copied language, then the existing token in the copied language\n\t\t * will be overwritten at its original position.\n\t\t *\n\t\t * ## Best practices\n\t\t *\n\t\t * Since the position of overwriting tokens (token in `redef` that overwrite tokens in the copied language)\n\t\t * doesn't matter, they can technically be in any order. However, this can be confusing to others that trying to\n\t\t * understand the language definition because, normally, the order of tokens matters in Prism grammars.\n\t\t *\n\t\t * Therefore, it is encouraged to order overwriting tokens according to the positions of the overwritten tokens.\n\t\t * Furthermore, all non-overwriting tokens should be placed after the overwriting ones.\n\t\t *\n\t\t * @param {string} id The id of the language to extend. This has to be a key in `Prism.languages`.\n\t\t * @param {Grammar} redef The new tokens to append.\n\t\t * @returns {Grammar} The new language created.\n\t\t * @public\n\t\t * @example\n\t\t * Prism.languages['css-with-colors'] = Prism.languages.extend('css', {\n\t\t *     // Prism.languages.css already has a 'comment' token, so this token will overwrite CSS' 'comment' token\n\t\t *     // at its original position\n\t\t *     'comment': { ... },\n\t\t *     // CSS doesn't have a 'color' token, so this token will be appended\n\t\t *     'color': /\\b(?:red|green|blue)\\b/\n\t\t * });\n\t\t */\n\t\textend: function (id, redef) {\n\t\t\tvar lang = _.util.clone(_.languages[id]);\n\n\t\t\tfor (var key in redef) {\n\t\t\t\tlang[key] = redef[key];\n\t\t\t}\n\n\t\t\treturn lang;\n\t\t},\n\n\t\t/**\n\t\t * Inserts tokens _before_ another token in a language definition or any other grammar.\n\t\t *\n\t\t * ## Usage\n\t\t *\n\t\t * This helper method makes it easy to modify existing languages. For example, the CSS language definition\n\t\t * not only defines CSS highlighting for CSS documents, but also needs to define highlighting for CSS embedded\n\t\t * in HTML through `<style>` elements. To do this, it needs to modify `Prism.languages.markup` and add the\n\t\t * appropriate tokens. However, `Prism.languages.markup` is a regular JavaScript object literal, so if you do\n\t\t * this:\n\t\t *\n\t\t * ```js\n\t\t * Prism.languages.markup.style = {\n\t\t *     // token\n\t\t * };\n\t\t * ```\n\t\t *\n\t\t * then the `style` token will be added (and processed) at the end. `insertBefore` allows you to insert tokens\n\t\t * before existing tokens. For the CSS example above, you would use it like this:\n\t\t *\n\t\t * ```js\n\t\t * Prism.languages.insertBefore('markup', 'cdata', {\n\t\t *     'style': {\n\t\t *         // token\n\t\t *     }\n\t\t * });\n\t\t * ```\n\t\t *\n\t\t * ## Special cases\n\t\t *\n\t\t * If the grammars of `inside` and `insert` have tokens with the same name, the tokens in `inside`'s grammar\n\t\t * will be ignored.\n\t\t *\n\t\t * This behavior can be used to insert tokens after `before`:\n\t\t *\n\t\t * ```js\n\t\t * Prism.languages.insertBefore('markup', 'comment', {\n\t\t *     'comment': Prism.languages.markup.comment,\n\t\t *     // tokens after 'comment'\n\t\t * });\n\t\t * ```\n\t\t *\n\t\t * ## Limitations\n\t\t *\n\t\t * The main problem `insertBefore` has to solve is iteration order. Since ES2015, the iteration order for object\n\t\t * properties is guaranteed to be the insertion order (except for integer keys) but some browsers behave\n\t\t * differently when keys are deleted and re-inserted. So `insertBefore` can't be implemented by temporarily\n\t\t * deleting properties which is necessary to insert at arbitrary positions.\n\t\t *\n\t\t * To solve this problem, `insertBefore` doesn't actually insert the given tokens into the target object.\n\t\t * Instead, it will create a new object and replace all references to the target object with the new one. This\n\t\t * can be done without temporarily deleting properties, so the iteration order is well-defined.\n\t\t *\n\t\t * However, only references that can be reached from `Prism.languages` or `insert` will be replaced. I.e. if\n\t\t * you hold the target object in a variable, then the value of the variable will not change.\n\t\t *\n\t\t * ```js\n\t\t * var oldMarkup = Prism.languages.markup;\n\t\t * var newMarkup = Prism.languages.insertBefore('markup', 'comment', { ... });\n\t\t *\n\t\t * assert(oldMarkup !== Prism.languages.markup);\n\t\t * assert(newMarkup === Prism.languages.markup);\n\t\t * ```\n\t\t *\n\t\t * @param {string} inside The property of `root` (e.g. a language id in `Prism.languages`) that contains the\n\t\t * object to be modified.\n\t\t * @param {string} before The key to insert before.\n\t\t * @param {Grammar} insert An object containing the key-value pairs to be inserted.\n\t\t * @param {Object<string, any>} [root] The object containing `inside`, i.e. the object that contains the\n\t\t * object to be modified.\n\t\t *\n\t\t * Defaults to `Prism.languages`.\n\t\t * @returns {Grammar} The new grammar object.\n\t\t * @public\n\t\t */\n\t\tinsertBefore: function (inside, before, insert, root) {\n\t\t\troot = root || /** @type {any} */ (_.languages);\n\t\t\tvar grammar = root[inside];\n\t\t\t/** @type {Grammar} */\n\t\t\tvar ret = {};\n\n\t\t\tfor (var token in grammar) {\n\t\t\t\tif (grammar.hasOwnProperty(token)) {\n\n\t\t\t\t\tif (token == before) {\n\t\t\t\t\t\tfor (var newToken in insert) {\n\t\t\t\t\t\t\tif (insert.hasOwnProperty(newToken)) {\n\t\t\t\t\t\t\t\tret[newToken] = insert[newToken];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Do not insert token which also occur in insert. See #1525\n\t\t\t\t\tif (!insert.hasOwnProperty(token)) {\n\t\t\t\t\t\tret[token] = grammar[token];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar old = root[inside];\n\t\t\troot[inside] = ret;\n\n\t\t\t// Update references in other language definitions\n\t\t\t_.languages.DFS(_.languages, function(key, value) {\n\t\t\t\tif (value === old && key != inside) {\n\t\t\t\t\tthis[key] = ret;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn ret;\n\t\t},\n\n\t\t// Traverse a language definition with Depth First Search\n\t\tDFS: function DFS(o, callback, type, visited) {\n\t\t\tvisited = visited || {};\n\n\t\t\tvar objId = _.util.objId;\n\n\t\t\tfor (var i in o) {\n\t\t\t\tif (o.hasOwnProperty(i)) {\n\t\t\t\t\tcallback.call(o, i, o[i], type || i);\n\n\t\t\t\t\tvar property = o[i],\n\t\t\t\t\t    propertyType = _.util.type(property);\n\n\t\t\t\t\tif (propertyType === 'Object' && !visited[objId(property)]) {\n\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\tDFS(property, callback, null, visited);\n\t\t\t\t\t}\n\t\t\t\t\telse if (propertyType === 'Array' && !visited[objId(property)]) {\n\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\tDFS(property, callback, i, visited);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tplugins: {},\n\n\t/**\n\t * This is the most high-level function in Prism’s API.\n\t * It fetches all the elements that have a `.language-xxxx` class and then calls {@link Prism.highlightElement} on\n\t * each one of them.\n\t *\n\t * This is equivalent to `Prism.highlightAllUnder(document, async, callback)`.\n\t *\n\t * @param {boolean} [async=false] Same as in {@link Prism.highlightAllUnder}.\n\t * @param {HighlightCallback} [callback] Same as in {@link Prism.highlightAllUnder}.\n\t * @memberof Prism\n\t * @public\n\t */\n\thighlightAll: function(async, callback) {\n\t\t_.highlightAllUnder(document, async, callback);\n\t},\n\n\t/**\n\t * Fetches all the descendants of `container` that have a `.language-xxxx` class and then calls\n\t * {@link Prism.highlightElement} on each one of them.\n\t *\n\t * The following hooks will be run:\n\t * 1. `before-highlightall`\n\t * 2. `before-all-elements-highlight`\n\t * 3. All hooks of {@link Prism.highlightElement} for each element.\n\t *\n\t * @param {ParentNode} container The root element, whose descendants that have a `.language-xxxx` class will be highlighted.\n\t * @param {boolean} [async=false] Whether each element is to be highlighted asynchronously using Web Workers.\n\t * @param {HighlightCallback} [callback] An optional callback to be invoked on each element after its highlighting is done.\n\t * @memberof Prism\n\t * @public\n\t */\n\thighlightAllUnder: function(container, async, callback) {\n\t\tvar env = {\n\t\t\tcallback: callback,\n\t\t\tcontainer: container,\n\t\t\tselector: 'code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code'\n\t\t};\n\n\t\t_.hooks.run('before-highlightall', env);\n\n\t\tenv.elements = Array.prototype.slice.apply(env.container.querySelectorAll(env.selector));\n\n\t\t_.hooks.run('before-all-elements-highlight', env);\n\n\t\tfor (var i = 0, element; element = env.elements[i++];) {\n\t\t\t_.highlightElement(element, async === true, env.callback);\n\t\t}\n\t},\n\n\t/**\n\t * Highlights the code inside a single element.\n\t *\n\t * The following hooks will be run:\n\t * 1. `before-sanity-check`\n\t * 2. `before-highlight`\n\t * 3. All hooks of {@link Prism.highlight}. These hooks will be run by an asynchronous worker if `async` is `true`.\n\t * 4. `before-insert`\n\t * 5. `after-highlight`\n\t * 6. `complete`\n\t *\n\t * Some the above hooks will be skipped if the element doesn't contain any text or there is no grammar loaded for\n\t * the element's language.\n\t *\n\t * @param {Element} element The element containing the code.\n\t * It must have a class of `language-xxxx` to be processed, where `xxxx` is a valid language identifier.\n\t * @param {boolean} [async=false] Whether the element is to be highlighted asynchronously using Web Workers\n\t * to improve performance and avoid blocking the UI when highlighting very large chunks of code. This option is\n\t * [disabled by default](https://prismjs.com/faq.html#why-is-asynchronous-highlighting-disabled-by-default).\n\t *\n\t * Note: All language definitions required to highlight the code must be included in the main `prism.js` file for\n\t * asynchronous highlighting to work. You can build your own bundle on the\n\t * [Download page](https://prismjs.com/download.html).\n\t * @param {HighlightCallback} [callback] An optional callback to be invoked after the highlighting is done.\n\t * Mostly useful when `async` is `true`, since in that case, the highlighting is done asynchronously.\n\t * @memberof Prism\n\t * @public\n\t */\n\thighlightElement: function(element, async, callback) {\n\t\t// Find language\n\t\tvar language = _.util.getLanguage(element);\n\t\tvar grammar = _.languages[language];\n\n\t\t// Set language on the element, if not present\n\t\telement.className = element.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;\n\n\t\t// Set language on the parent, for styling\n\t\tvar parent = element.parentElement;\n\t\tif (parent && parent.nodeName.toLowerCase() === 'pre') {\n\t\t\tparent.className = parent.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;\n\t\t}\n\n\t\tvar code = element.textContent;\n\n\t\tvar env = {\n\t\t\telement: element,\n\t\t\tlanguage: language,\n\t\t\tgrammar: grammar,\n\t\t\tcode: code\n\t\t};\n\n\t\tfunction insertHighlightedCode(highlightedCode) {\n\t\t\tenv.highlightedCode = highlightedCode;\n\n\t\t\t_.hooks.run('before-insert', env);\n\n\t\t\tenv.element.innerHTML = env.highlightedCode;\n\n\t\t\t_.hooks.run('after-highlight', env);\n\t\t\t_.hooks.run('complete', env);\n\t\t\tcallback && callback.call(env.element);\n\t\t}\n\n\t\t_.hooks.run('before-sanity-check', env);\n\n\t\tif (!env.code) {\n\t\t\t_.hooks.run('complete', env);\n\t\t\tcallback && callback.call(env.element);\n\t\t\treturn;\n\t\t}\n\n\t\t_.hooks.run('before-highlight', env);\n\n\t\tif (!env.grammar) {\n\t\t\tinsertHighlightedCode(_.util.encode(env.code));\n\t\t\treturn;\n\t\t}\n\n\t\tif (async && _self.Worker) {\n\t\t\tvar worker = new Worker(_.filename);\n\n\t\t\tworker.onmessage = function(evt) {\n\t\t\t\tinsertHighlightedCode(evt.data);\n\t\t\t};\n\n\t\t\tworker.postMessage(JSON.stringify({\n\t\t\t\tlanguage: env.language,\n\t\t\t\tcode: env.code,\n\t\t\t\timmediateClose: true\n\t\t\t}));\n\t\t}\n\t\telse {\n\t\t\tinsertHighlightedCode(_.highlight(env.code, env.grammar, env.language));\n\t\t}\n\t},\n\n\t/**\n\t * Low-level function, only use if you know what you’re doing. It accepts a string of text as input\n\t * and the language definitions to use, and returns a string with the HTML produced.\n\t *\n\t * The following hooks will be run:\n\t * 1. `before-tokenize`\n\t * 2. `after-tokenize`\n\t * 3. `wrap`: On each {@link Token}.\n\t *\n\t * @param {string} text A string with the code to be highlighted.\n\t * @param {Grammar} grammar An object containing the tokens to use.\n\t *\n\t * Usually a language definition like `Prism.languages.markup`.\n\t * @param {string} language The name of the language definition passed to `grammar`.\n\t * @returns {string} The highlighted HTML.\n\t * @memberof Prism\n\t * @public\n\t * @example\n\t * Prism.highlight('var foo = true;', Prism.languages.javascript, 'javascript');\n\t */\n\thighlight: function (text, grammar, language) {\n\t\tvar env = {\n\t\t\tcode: text,\n\t\t\tgrammar: grammar,\n\t\t\tlanguage: language\n\t\t};\n\t\t_.hooks.run('before-tokenize', env);\n\t\tenv.tokens = _.tokenize(env.code, env.grammar);\n\t\t_.hooks.run('after-tokenize', env);\n\t\treturn Token.stringify(_.util.encode(env.tokens), env.language);\n\t},\n\n\t/**\n\t * This is the heart of Prism, and the most low-level function you can use. It accepts a string of text as input\n\t * and the language definitions to use, and returns an array with the tokenized code.\n\t *\n\t * When the language definition includes nested tokens, the function is called recursively on each of these tokens.\n\t *\n\t * This method could be useful in other contexts as well, as a very crude parser.\n\t *\n\t * @param {string} text A string with the code to be highlighted.\n\t * @param {Grammar} grammar An object containing the tokens to use.\n\t *\n\t * Usually a language definition like `Prism.languages.markup`.\n\t * @returns {TokenStream} An array of strings and tokens, a token stream.\n\t * @memberof Prism\n\t * @public\n\t * @example\n\t * let code = `var foo = 0;`;\n\t * let tokens = Prism.tokenize(code, Prism.languages.javascript);\n\t * tokens.forEach(token => {\n\t *     if (token instanceof Prism.Token && token.type === 'number') {\n\t *         console.log(`Found numeric literal: ${token.content}`);\n\t *     }\n\t * });\n\t */\n\ttokenize: function(text, grammar) {\n\t\tvar rest = grammar.rest;\n\t\tif (rest) {\n\t\t\tfor (var token in rest) {\n\t\t\t\tgrammar[token] = rest[token];\n\t\t\t}\n\n\t\t\tdelete grammar.rest;\n\t\t}\n\n\t\tvar tokenList = new LinkedList();\n\t\taddAfter(tokenList, tokenList.head, text);\n\n\t\tmatchGrammar(text, tokenList, grammar, tokenList.head, 0);\n\n\t\treturn toArray(tokenList);\n\t},\n\n\t/**\n\t * @namespace\n\t * @memberof Prism\n\t * @public\n\t */\n\thooks: {\n\t\tall: {},\n\n\t\t/**\n\t\t * Adds the given callback to the list of callbacks for the given hook.\n\t\t *\n\t\t * The callback will be invoked when the hook it is registered for is run.\n\t\t * Hooks are usually directly run by a highlight function but you can also run hooks yourself.\n\t\t *\n\t\t * One callback function can be registered to multiple hooks and the same hook multiple times.\n\t\t *\n\t\t * @param {string} name The name of the hook.\n\t\t * @param {HookCallback} callback The callback function which is given environment variables.\n\t\t * @public\n\t\t */\n\t\tadd: function (name, callback) {\n\t\t\tvar hooks = _.hooks.all;\n\n\t\t\thooks[name] = hooks[name] || [];\n\n\t\t\thooks[name].push(callback);\n\t\t},\n\n\t\t/**\n\t\t * Runs a hook invoking all registered callbacks with the given environment variables.\n\t\t *\n\t\t * Callbacks will be invoked synchronously and in the order in which they were registered.\n\t\t *\n\t\t * @param {string} name The name of the hook.\n\t\t * @param {Object<string, any>} env The environment variables of the hook passed to all callbacks registered.\n\t\t * @public\n\t\t */\n\t\trun: function (name, env) {\n\t\t\tvar callbacks = _.hooks.all[name];\n\n\t\t\tif (!callbacks || !callbacks.length) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfor (var i=0, callback; callback = callbacks[i++];) {\n\t\t\t\tcallback(env);\n\t\t\t}\n\t\t}\n\t},\n\n\tToken: Token\n};\n_self.Prism = _;\n\n\n// Typescript note:\n// The following can be used to import the Token type in JSDoc:\n//\n//   @typedef {InstanceType<import(\"./prism-core\")[\"Token\"]>} Token\n\n/**\n * Creates a new token.\n *\n * @param {string} type See {@link Token#type type}\n * @param {string | TokenStream} content See {@link Token#content content}\n * @param {string|string[]} [alias] The alias(es) of the token.\n * @param {string} [matchedStr=\"\"] A copy of the full string this token was created from.\n * @class\n * @global\n * @public\n */\nfunction Token(type, content, alias, matchedStr) {\n\t/**\n\t * The type of the token.\n\t *\n\t * This is usually the key of a pattern in a {@link Grammar}.\n\t *\n\t * @type {string}\n\t * @see GrammarToken\n\t * @public\n\t */\n\tthis.type = type;\n\t/**\n\t * The strings or tokens contained by this token.\n\t *\n\t * This will be a token stream if the pattern matched also defined an `inside` grammar.\n\t *\n\t * @type {string | TokenStream}\n\t * @public\n\t */\n\tthis.content = content;\n\t/**\n\t * The alias(es) of the token.\n\t *\n\t * @type {string|string[]}\n\t * @see GrammarToken\n\t * @public\n\t */\n\tthis.alias = alias;\n\t// Copy of the full string this token was created from\n\tthis.length = (matchedStr || '').length | 0;\n}\n\n/**\n * A token stream is an array of strings and {@link Token Token} objects.\n *\n * Token streams have to fulfill a few properties that are assumed by most functions (mostly internal ones) that process\n * them.\n *\n * 1. No adjacent strings.\n * 2. No empty strings.\n *\n *    The only exception here is the token stream that only contains the empty string and nothing else.\n *\n * @typedef {Array<string | Token>} TokenStream\n * @global\n * @public\n */\n\n/**\n * Converts the given token or token stream to an HTML representation.\n *\n * The following hooks will be run:\n * 1. `wrap`: On each {@link Token}.\n *\n * @param {string | Token | TokenStream} o The token or token stream to be converted.\n * @param {string} language The name of current language.\n * @returns {string} The HTML representation of the token or token stream.\n * @memberof Token\n * @static\n */\nToken.stringify = function stringify(o, language) {\n\tif (typeof o == 'string') {\n\t\treturn o;\n\t}\n\tif (Array.isArray(o)) {\n\t\tvar s = '';\n\t\to.forEach(function (e) {\n\t\t\ts += stringify(e, language);\n\t\t});\n\t\treturn s;\n\t}\n\n\tvar env = {\n\t\ttype: o.type,\n\t\tcontent: stringify(o.content, language),\n\t\ttag: 'span',\n\t\tclasses: ['token', o.type],\n\t\tattributes: {},\n\t\tlanguage: language\n\t};\n\n\tvar aliases = o.alias;\n\tif (aliases) {\n\t\tif (Array.isArray(aliases)) {\n\t\t\tArray.prototype.push.apply(env.classes, aliases);\n\t\t} else {\n\t\t\tenv.classes.push(aliases);\n\t\t}\n\t}\n\n\t_.hooks.run('wrap', env);\n\n\tvar attributes = '';\n\tfor (var name in env.attributes) {\n\t\tattributes += ' ' + name + '=\"' + (env.attributes[name] || '').replace(/\"/g, '&quot;') + '\"';\n\t}\n\n\treturn '<' + env.tag + ' class=\"' + env.classes.join(' ') + '\"' + attributes + '>' + env.content + '</' + env.tag + '>';\n};\n\n/**\n * @param {RegExp} pattern\n * @param {number} pos\n * @param {string} text\n * @param {boolean} lookbehind\n * @returns {RegExpExecArray | null}\n */\nfunction matchPattern(pattern, pos, text, lookbehind) {\n\tpattern.lastIndex = pos;\n\tvar match = pattern.exec(text);\n\tif (match && lookbehind && match[1]) {\n\t\t// change the match to remove the text matched by the Prism lookbehind group\n\t\tvar lookbehindLength = match[1].length;\n\t\tmatch.index += lookbehindLength;\n\t\tmatch[0] = match[0].slice(lookbehindLength);\n\t}\n\treturn match;\n}\n\n/**\n * @param {string} text\n * @param {LinkedList<string | Token>} tokenList\n * @param {any} grammar\n * @param {LinkedListNode<string | Token>} startNode\n * @param {number} startPos\n * @param {RematchOptions} [rematch]\n * @returns {void}\n * @private\n *\n * @typedef RematchOptions\n * @property {string} cause\n * @property {number} reach\n */\nfunction matchGrammar(text, tokenList, grammar, startNode, startPos, rematch) {\n\tfor (var token in grammar) {\n\t\tif (!grammar.hasOwnProperty(token) || !grammar[token]) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tvar patterns = grammar[token];\n\t\tpatterns = Array.isArray(patterns) ? patterns : [patterns];\n\n\t\tfor (var j = 0; j < patterns.length; ++j) {\n\t\t\tif (rematch && rematch.cause == token + ',' + j) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar patternObj = patterns[j],\n\t\t\t\tinside = patternObj.inside,\n\t\t\t\tlookbehind = !!patternObj.lookbehind,\n\t\t\t\tgreedy = !!patternObj.greedy,\n\t\t\t\talias = patternObj.alias;\n\n\t\t\tif (greedy && !patternObj.pattern.global) {\n\t\t\t\t// Without the global flag, lastIndex won't work\n\t\t\t\tvar flags = patternObj.pattern.toString().match(/[imsuy]*$/)[0];\n\t\t\t\tpatternObj.pattern = RegExp(patternObj.pattern.source, flags + 'g');\n\t\t\t}\n\n\t\t\t/** @type {RegExp} */\n\t\t\tvar pattern = patternObj.pattern || patternObj;\n\n\t\t\tfor ( // iterate the token list and keep track of the current token/string position\n\t\t\t\tvar currentNode = startNode.next, pos = startPos;\n\t\t\t\tcurrentNode !== tokenList.tail;\n\t\t\t\tpos += currentNode.value.length, currentNode = currentNode.next\n\t\t\t) {\n\n\t\t\t\tif (rematch && pos >= rematch.reach) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tvar str = currentNode.value;\n\n\t\t\t\tif (tokenList.length > text.length) {\n\t\t\t\t\t// Something went terribly wrong, ABORT, ABORT!\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (str instanceof Token) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tvar removeCount = 1; // this is the to parameter of removeBetween\n\t\t\t\tvar match;\n\n\t\t\t\tif (greedy) {\n\t\t\t\t\tmatch = matchPattern(pattern, pos, text, lookbehind);\n\t\t\t\t\tif (!match) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar from = match.index;\n\t\t\t\t\tvar to = match.index + match[0].length;\n\t\t\t\t\tvar p = pos;\n\n\t\t\t\t\t// find the node that contains the match\n\t\t\t\t\tp += currentNode.value.length;\n\t\t\t\t\twhile (from >= p) {\n\t\t\t\t\t\tcurrentNode = currentNode.next;\n\t\t\t\t\t\tp += currentNode.value.length;\n\t\t\t\t\t}\n\t\t\t\t\t// adjust pos (and p)\n\t\t\t\t\tp -= currentNode.value.length;\n\t\t\t\t\tpos = p;\n\n\t\t\t\t\t// the current node is a Token, then the match starts inside another Token, which is invalid\n\t\t\t\t\tif (currentNode.value instanceof Token) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\t// find the last node which is affected by this match\n\t\t\t\t\tfor (\n\t\t\t\t\t\tvar k = currentNode;\n\t\t\t\t\t\tk !== tokenList.tail && (p < to || typeof k.value === 'string');\n\t\t\t\t\t\tk = k.next\n\t\t\t\t\t) {\n\t\t\t\t\t\tremoveCount++;\n\t\t\t\t\t\tp += k.value.length;\n\t\t\t\t\t}\n\t\t\t\t\tremoveCount--;\n\n\t\t\t\t\t// replace with the new match\n\t\t\t\t\tstr = text.slice(pos, p);\n\t\t\t\t\tmatch.index -= pos;\n\t\t\t\t} else {\n\t\t\t\t\tmatch = matchPattern(pattern, 0, str, lookbehind);\n\t\t\t\t\tif (!match) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar from = match.index,\n\t\t\t\t\tmatchStr = match[0],\n\t\t\t\t\tbefore = str.slice(0, from),\n\t\t\t\t\tafter = str.slice(from + matchStr.length);\n\n\t\t\t\tvar reach = pos + str.length;\n\t\t\t\tif (rematch && reach > rematch.reach) {\n\t\t\t\t\trematch.reach = reach;\n\t\t\t\t}\n\n\t\t\t\tvar removeFrom = currentNode.prev;\n\n\t\t\t\tif (before) {\n\t\t\t\t\tremoveFrom = addAfter(tokenList, removeFrom, before);\n\t\t\t\t\tpos += before.length;\n\t\t\t\t}\n\n\t\t\t\tremoveRange(tokenList, removeFrom, removeCount);\n\n\t\t\t\tvar wrapped = new Token(token, inside ? _.tokenize(matchStr, inside) : matchStr, alias, matchStr);\n\t\t\t\tcurrentNode = addAfter(tokenList, removeFrom, wrapped);\n\n\t\t\t\tif (after) {\n\t\t\t\t\taddAfter(tokenList, currentNode, after);\n\t\t\t\t}\n\n\t\t\t\tif (removeCount > 1) {\n\t\t\t\t\t// at least one Token object was removed, so we have to do some rematching\n\t\t\t\t\t// this can only happen if the current pattern is greedy\n\t\t\t\t\tmatchGrammar(text, tokenList, grammar, currentNode.prev, pos, {\n\t\t\t\t\t\tcause: token + ',' + j,\n\t\t\t\t\t\treach: reach\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * @typedef LinkedListNode\n * @property {T} value\n * @property {LinkedListNode<T> | null} prev The previous node.\n * @property {LinkedListNode<T> | null} next The next node.\n * @template T\n * @private\n */\n\n/**\n * @template T\n * @private\n */\nfunction LinkedList() {\n\t/** @type {LinkedListNode<T>} */\n\tvar head = { value: null, prev: null, next: null };\n\t/** @type {LinkedListNode<T>} */\n\tvar tail = { value: null, prev: head, next: null };\n\thead.next = tail;\n\n\t/** @type {LinkedListNode<T>} */\n\tthis.head = head;\n\t/** @type {LinkedListNode<T>} */\n\tthis.tail = tail;\n\tthis.length = 0;\n}\n\n/**\n * Adds a new node with the given value to the list.\n * @param {LinkedList<T>} list\n * @param {LinkedListNode<T>} node\n * @param {T} value\n * @returns {LinkedListNode<T>} The added node.\n * @template T\n */\nfunction addAfter(list, node, value) {\n\t// assumes that node != list.tail && values.length >= 0\n\tvar next = node.next;\n\n\tvar newNode = { value: value, prev: node, next: next };\n\tnode.next = newNode;\n\tnext.prev = newNode;\n\tlist.length++;\n\n\treturn newNode;\n}\n/**\n * Removes `count` nodes after the given node. The given node will not be removed.\n * @param {LinkedList<T>} list\n * @param {LinkedListNode<T>} node\n * @param {number} count\n * @template T\n */\nfunction removeRange(list, node, count) {\n\tvar next = node.next;\n\tfor (var i = 0; i < count && next !== list.tail; i++) {\n\t\tnext = next.next;\n\t}\n\tnode.next = next;\n\tnext.prev = node;\n\tlist.length -= i;\n}\n/**\n * @param {LinkedList<T>} list\n * @returns {T[]}\n * @template T\n */\nfunction toArray(list) {\n\tvar array = [];\n\tvar node = list.head.next;\n\twhile (node !== list.tail) {\n\t\tarray.push(node.value);\n\t\tnode = node.next;\n\t}\n\treturn array;\n}\n\n\nif (!_self.document) {\n\tif (!_self.addEventListener) {\n\t\t// in Node.js\n\t\treturn _;\n\t}\n\n\tif (!_.disableWorkerMessageHandler) {\n\t\t// In worker\n\t\t_self.addEventListener('message', function (evt) {\n\t\t\tvar message = JSON.parse(evt.data),\n\t\t\t\tlang = message.language,\n\t\t\t\tcode = message.code,\n\t\t\t\timmediateClose = message.immediateClose;\n\n\t\t\t_self.postMessage(_.highlight(code, _.languages[lang], lang));\n\t\t\tif (immediateClose) {\n\t\t\t\t_self.close();\n\t\t\t}\n\t\t}, false);\n\t}\n\n\treturn _;\n}\n\n// Get current script and highlight\nvar script = _.util.currentScript();\n\nif (script) {\n\t_.filename = script.src;\n\n\tif (script.hasAttribute('data-manual')) {\n\t\t_.manual = true;\n\t}\n}\n\nfunction highlightAutomaticallyCallback() {\n\tif (!_.manual) {\n\t\t_.highlightAll();\n\t}\n}\n\nif (!_.manual) {\n\t// If the document state is \"loading\", then we'll use DOMContentLoaded.\n\t// If the document state is \"interactive\" and the prism.js script is deferred, then we'll also use the\n\t// DOMContentLoaded event because there might be some plugins or languages which have also been deferred and they\n\t// might take longer one animation frame to execute which can create a race condition where only some plugins have\n\t// been loaded when Prism.highlightAll() is executed, depending on how fast resources are loaded.\n\t// See https://github.com/PrismJS/prism/issues/2102\n\tvar readyState = document.readyState;\n\tif (readyState === 'loading' || readyState === 'interactive' && script && script.defer) {\n\t\tdocument.addEventListener('DOMContentLoaded', highlightAutomaticallyCallback);\n\t} else {\n\t\tif (window.requestAnimationFrame) {\n\t\t\twindow.requestAnimationFrame(highlightAutomaticallyCallback);\n\t\t} else {\n\t\t\twindow.setTimeout(highlightAutomaticallyCallback, 16);\n\t\t}\n\t}\n}\n\nreturn _;\n\n})(_self);\n\nif (typeof module !== 'undefined' && module.exports) {\n\tmodule.exports = Prism;\n}\n\n// hack for components to work correctly in node.js\nif (typeof global !== 'undefined') {\n\tglobal.Prism = Prism;\n}\n\n// some additional documentation/types\n\n/**\n * The expansion of a simple `RegExp` literal to support additional properties.\n *\n * @typedef GrammarToken\n * @property {RegExp} pattern The regular expression of the token.\n * @property {boolean} [lookbehind=false] If `true`, then the first capturing group of `pattern` will (effectively)\n * behave as a lookbehind group meaning that the captured text will not be part of the matched text of the new token.\n * @property {boolean} [greedy=false] Whether the token is greedy.\n * @property {string|string[]} [alias] An optional alias or list of aliases.\n * @property {Grammar} [inside] The nested grammar of this token.\n *\n * The `inside` grammar will be used to tokenize the text value of each token of this kind.\n *\n * This can be used to make nested and even recursive language definitions.\n *\n * Note: This can cause infinite recursion. Be careful when you embed different languages or even the same language into\n * each another.\n * @global\n * @public\n*/\n\n/**\n * @typedef Grammar\n * @type {Object<string, RegExp | GrammarToken | Array<RegExp | GrammarToken>>}\n * @property {Grammar} [rest] An optional grammar object that will be appended to this grammar.\n * @global\n * @public\n */\n\n/**\n * A function which will invoked after an element was successfully highlighted.\n *\n * @callback HighlightCallback\n * @param {Element} element The element successfully highlighted.\n * @returns {void}\n * @global\n * @public\n*/\n\n/**\n * @callback HookCallback\n * @param {Object<string, any>} env The environment variables of the hook.\n * @returns {void}\n * @global\n * @public\n */\n\n\n/* **********************************************\n     Begin prism-markup.js\n********************************************** */\n\nPrism.languages.markup = {\n\t'comment': /<!--[\\s\\S]*?-->/,\n\t'prolog': /<\\?[\\s\\S]+?\\?>/,\n\t'doctype': {\n\t\t// https://www.w3.org/TR/xml/#NT-doctypedecl\n\t\tpattern: /<!DOCTYPE(?:[^>\"'[\\]]|\"[^\"]*\"|'[^']*')+(?:\\[(?:[^<\"'\\]]|\"[^\"]*\"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\\]\\s*)?>/i,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'internal-subset': {\n\t\t\t\tpattern: /(\\[)[\\s\\S]+(?=\\]>$)/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: null // see below\n\t\t\t},\n\t\t\t'string': {\n\t\t\t\tpattern: /\"[^\"]*\"|'[^']*'/,\n\t\t\t\tgreedy: true\n\t\t\t},\n\t\t\t'punctuation': /^<!|>$|[[\\]]/,\n\t\t\t'doctype-tag': /^DOCTYPE/,\n\t\t\t'name': /[^\\s<>'\"]+/\n\t\t}\n\t},\n\t'cdata': /<!\\[CDATA\\[[\\s\\S]*?]]>/i,\n\t'tag': {\n\t\tpattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'tag': {\n\t\t\t\tpattern: /^<\\/?[^\\s>\\/]+/,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /^<\\/?/,\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t},\n\t\t\t'attr-value': {\n\t\t\t\tpattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpattern: /^=/,\n\t\t\t\t\t\t\talias: 'attr-equals'\n\t\t\t\t\t\t},\n\t\t\t\t\t\t/\"|'/\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t},\n\t\t\t'punctuation': /\\/?>/,\n\t\t\t'attr-name': {\n\t\t\t\tpattern: /[^\\s>\\/]+/,\n\t\t\t\tinside: {\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t},\n\t'entity': [\n\t\t{\n\t\t\tpattern: /&[\\da-z]{1,8};/i,\n\t\t\talias: 'named-entity'\n\t\t},\n\t\t/&#x?[\\da-f]{1,8};/i\n\t]\n};\n\nPrism.languages.markup['tag'].inside['attr-value'].inside['entity'] =\n\tPrism.languages.markup['entity'];\nPrism.languages.markup['doctype'].inside['internal-subset'].inside = Prism.languages.markup;\n\n// Plugin to make entity title show the real entity, idea by Roman Komarov\nPrism.hooks.add('wrap', function (env) {\n\n\tif (env.type === 'entity') {\n\t\tenv.attributes['title'] = env.content.replace(/&amp;/, '&');\n\t}\n});\n\nObject.defineProperty(Prism.languages.markup.tag, 'addInlined', {\n\t/**\n\t * Adds an inlined language to markup.\n\t *\n\t * An example of an inlined language is CSS with `<style>` tags.\n\t *\n\t * @param {string} tagName The name of the tag that contains the inlined language. This name will be treated as\n\t * case insensitive.\n\t * @param {string} lang The language key.\n\t * @example\n\t * addInlined('style', 'css');\n\t */\n\tvalue: function addInlined(tagName, lang) {\n\t\tvar includedCdataInside = {};\n\t\tincludedCdataInside['language-' + lang] = {\n\t\t\tpattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages[lang]\n\t\t};\n\t\tincludedCdataInside['cdata'] = /^<!\\[CDATA\\[|\\]\\]>$/i;\n\n\t\tvar inside = {\n\t\t\t'included-cdata': {\n\t\t\t\tpattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n\t\t\t\tinside: includedCdataInside\n\t\t\t}\n\t\t};\n\t\tinside['language-' + lang] = {\n\t\t\tpattern: /[\\s\\S]+/,\n\t\t\tinside: Prism.languages[lang]\n\t\t};\n\n\t\tvar def = {};\n\t\tdef[tagName] = {\n\t\t\tpattern: RegExp(/(<__[^>]*>)(?:<!\\[CDATA\\[(?:[^\\]]|\\](?!\\]>))*\\]\\]>|(?!<!\\[CDATA\\[)[\\s\\S])*?(?=<\\/__>)/.source.replace(/__/g, function () { return tagName; }), 'i'),\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\tinside: inside\n\t\t};\n\n\t\tPrism.languages.insertBefore('markup', 'cdata', def);\n\t}\n});\n\nPrism.languages.html = Prism.languages.markup;\nPrism.languages.mathml = Prism.languages.markup;\nPrism.languages.svg = Prism.languages.markup;\n\nPrism.languages.xml = Prism.languages.extend('markup', {});\nPrism.languages.ssml = Prism.languages.xml;\nPrism.languages.atom = Prism.languages.xml;\nPrism.languages.rss = Prism.languages.xml;\n\n\n/* **********************************************\n     Begin prism-css.js\n********************************************** */\n\n(function (Prism) {\n\n\tvar string = /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/;\n\n\tPrism.languages.css = {\n\t\t'comment': /\\/\\*[\\s\\S]*?\\*\\//,\n\t\t'atrule': {\n\t\t\tpattern: /@[\\w-](?:[^;{\\s]|\\s+(?![\\s{]))*(?:;|(?=\\s*\\{))/,\n\t\t\tinside: {\n\t\t\t\t'rule': /^@[\\w-]+/,\n\t\t\t\t'selector-function-argument': {\n\t\t\t\t\tpattern: /(\\bselector\\s*\\(\\s*(?![\\s)]))(?:[^()\\s]|\\s+(?![\\s)])|\\((?:[^()]|\\([^()]*\\))*\\))+(?=\\s*\\))/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\talias: 'selector'\n\t\t\t\t},\n\t\t\t\t'keyword': {\n\t\t\t\t\tpattern: /(^|[^\\w-])(?:and|not|only|or)(?![\\w-])/,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t}\n\t\t\t\t// See rest below\n\t\t\t}\n\t\t},\n\t\t'url': {\n\t\t\t// https://drafts.csswg.org/css-values-3/#urls\n\t\t\tpattern: RegExp('\\\\burl\\\\((?:' + string.source + '|' + /(?:[^\\\\\\r\\n()\"']|\\\\[\\s\\S])*/.source + ')\\\\)', 'i'),\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'function': /^url/i,\n\t\t\t\t'punctuation': /^\\(|\\)$/,\n\t\t\t\t'string': {\n\t\t\t\t\tpattern: RegExp('^' + string.source + '$'),\n\t\t\t\t\talias: 'url'\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t'selector': RegExp('[^{}\\\\s](?:[^{};\"\\'\\\\s]|\\\\s+(?![\\\\s{])|' + string.source + ')*(?=\\\\s*\\\\{)'),\n\t\t'string': {\n\t\t\tpattern: string,\n\t\t\tgreedy: true\n\t\t},\n\t\t'property': /(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*(?=\\s*:)/i,\n\t\t'important': /!important\\b/i,\n\t\t'function': /[-a-z0-9]+(?=\\()/i,\n\t\t'punctuation': /[(){};:,]/\n\t};\n\n\tPrism.languages.css['atrule'].inside.rest = Prism.languages.css;\n\n\tvar markup = Prism.languages.markup;\n\tif (markup) {\n\t\tmarkup.tag.addInlined('style', 'css');\n\n\t\tPrism.languages.insertBefore('inside', 'attr-value', {\n\t\t\t'style-attr': {\n\t\t\t\tpattern: /(^|[\"'\\s])style\\s*=\\s*(?:\"[^\"]*\"|'[^']*')/i,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'attr-value': {\n\t\t\t\t\t\tpattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/,\n\t\t\t\t\t\tinside: {\n\t\t\t\t\t\t\t'style': {\n\t\t\t\t\t\t\t\tpattern: /([\"'])[\\s\\S]+(?=[\"']$)/,\n\t\t\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\t\t\talias: 'language-css',\n\t\t\t\t\t\t\t\tinside: Prism.languages.css\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t'punctuation': [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tpattern: /^=/,\n\t\t\t\t\t\t\t\t\talias: 'attr-equals'\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t/\"|'/\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t'attr-name': /^style/i\n\t\t\t\t}\n\t\t\t}\n\t\t}, markup.tag);\n\t}\n\n}(Prism));\n\n\n/* **********************************************\n     Begin prism-clike.js\n********************************************** */\n\nPrism.languages.clike = {\n\t'comment': [\n\t\t{\n\t\t\tpattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^\\\\:])\\/\\/.*/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t}\n\t],\n\t'string': {\n\t\tpattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\t\tgreedy: true\n\t},\n\t'class-name': {\n\t\tpattern: /(\\b(?:class|interface|extends|implements|trait|instanceof|new)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+/i,\n\t\tlookbehind: true,\n\t\tinside: {\n\t\t\t'punctuation': /[.\\\\]/\n\t\t}\n\t},\n\t'keyword': /\\b(?:if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\\b/,\n\t'boolean': /\\b(?:true|false)\\b/,\n\t'function': /\\w+(?=\\()/,\n\t'number': /\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n\t'operator': /[<>]=?|[!=]=?=?|--?|\\+\\+?|&&?|\\|\\|?|[?*/~^%]/,\n\t'punctuation': /[{}[\\];(),.:]/\n};\n\n\n/* **********************************************\n     Begin prism-javascript.js\n********************************************** */\n\nPrism.languages.javascript = Prism.languages.extend('clike', {\n\t'class-name': [\n\t\tPrism.languages.clike['class-name'],\n\t\t{\n\t\t\tpattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$A-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\.(?:prototype|constructor))/,\n\t\t\tlookbehind: true\n\t\t}\n\t],\n\t'keyword': [\n\t\t{\n\t\t\tpattern: /((?:^|})\\s*)(?:catch|finally)\\b/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^.]|\\.\\.\\.\\s*)\\b(?:as|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|for|from|function|(?:get|set)(?=\\s*[\\[$\\w\\xA0-\\uFFFF])|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,\n\t\t\tlookbehind: true\n\t\t},\n\t],\n\t// Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n\t'function': /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,\n\t'number': /\\b(?:(?:0[xX](?:[\\dA-Fa-f](?:_[\\dA-Fa-f])?)+|0[bB](?:[01](?:_[01])?)+|0[oO](?:[0-7](?:_[0-7])?)+)n?|(?:\\d(?:_\\d)?)+n|NaN|Infinity)\\b|(?:\\b(?:\\d(?:_\\d)?)+\\.?(?:\\d(?:_\\d)?)*|\\B\\.(?:\\d(?:_\\d)?)+)(?:[Ee][+-]?(?:\\d(?:_\\d)?)+)?/,\n\t'operator': /--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/\n});\n\nPrism.languages.javascript['class-name'][0].pattern = /(\\b(?:class|interface|extends|implements|instanceof|new)\\s+)[\\w.\\\\]+/;\n\nPrism.languages.insertBefore('javascript', 'keyword', {\n\t'regex': {\n\t\tpattern: /((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s]|\\b(?:return|yield))\\s*)\\/(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[gimyus]{0,6}(?=(?:\\s|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*(?:$|[\\r\\n,.;:})\\]]|\\/\\/))/,\n\t\tlookbehind: true,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'regex-source': {\n\t\t\t\tpattern: /^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/,\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'language-regex',\n\t\t\t\tinside: Prism.languages.regex\n\t\t\t},\n\t\t\t'regex-flags': /[a-z]+$/,\n\t\t\t'regex-delimiter': /^\\/|\\/$/\n\t\t}\n\t},\n\t// This must be declared before keyword because we use \"function\" inside the look-forward\n\t'function-variable': {\n\t\tpattern: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/,\n\t\talias: 'function'\n\t},\n\t'parameter': [\n\t\t{\n\t\t\tpattern: /(function(?:\\s+(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)?\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\))/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*=>)/i,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /(\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*=>)/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*)\\(\\s*|\\]\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*\\{)/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t}\n\t],\n\t'constant': /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/\n});\n\nPrism.languages.insertBefore('javascript', 'string', {\n\t'template-string': {\n\t\tpattern: /`(?:\\\\[\\s\\S]|\\${(?:[^{}]|{(?:[^{}]|{[^}]*})*})+}|(?!\\${)[^\\\\`])*`/,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'template-punctuation': {\n\t\t\t\tpattern: /^`|`$/,\n\t\t\t\talias: 'string'\n\t\t\t},\n\t\t\t'interpolation': {\n\t\t\t\tpattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\${(?:[^{}]|{(?:[^{}]|{[^}]*})*})+}/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'interpolation-punctuation': {\n\t\t\t\t\t\tpattern: /^\\${|}$/,\n\t\t\t\t\t\talias: 'punctuation'\n\t\t\t\t\t},\n\t\t\t\t\trest: Prism.languages.javascript\n\t\t\t\t}\n\t\t\t},\n\t\t\t'string': /[\\s\\S]+/\n\t\t}\n\t}\n});\n\nif (Prism.languages.markup) {\n\tPrism.languages.markup.tag.addInlined('script', 'javascript');\n}\n\nPrism.languages.js = Prism.languages.javascript;\n\n\n/* **********************************************\n     Begin prism-file-highlight.js\n********************************************** */\n\n(function () {\n\tif (typeof self === 'undefined' || !self.Prism || !self.document) {\n\t\treturn;\n\t}\n\n\t// https://developer.mozilla.org/en-US/docs/Web/API/Element/matches#Polyfill\n\tif (!Element.prototype.matches) {\n\t\tElement.prototype.matches = Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;\n\t}\n\n\tvar Prism = window.Prism;\n\n\tvar LOADING_MESSAGE = 'Loading…';\n\tvar FAILURE_MESSAGE = function (status, message) {\n\t\treturn '✖ Error ' + status + ' while fetching file: ' + message;\n\t};\n\tvar FAILURE_EMPTY_MESSAGE = '✖ Error: File does not exist or is empty';\n\n\tvar EXTENSIONS = {\n\t\t'js': 'javascript',\n\t\t'py': 'python',\n\t\t'rb': 'ruby',\n\t\t'ps1': 'powershell',\n\t\t'psm1': 'powershell',\n\t\t'sh': 'bash',\n\t\t'bat': 'batch',\n\t\t'h': 'c',\n\t\t'tex': 'latex'\n\t};\n\n\tvar STATUS_ATTR = 'data-src-status';\n\tvar STATUS_LOADING = 'loading';\n\tvar STATUS_LOADED = 'loaded';\n\tvar STATUS_FAILED = 'failed';\n\n\tvar SELECTOR = 'pre[data-src]:not([' + STATUS_ATTR + '=\"' + STATUS_LOADED + '\"])'\n\t\t+ ':not([' + STATUS_ATTR + '=\"' + STATUS_LOADING + '\"])';\n\n\tvar lang = /\\blang(?:uage)?-([\\w-]+)\\b/i;\n\n\t/**\n\t * Sets the Prism `language-xxxx` or `lang-xxxx` class to the given language.\n\t *\n\t * @param {HTMLElement} element\n\t * @param {string} language\n\t * @returns {void}\n\t */\n\tfunction setLanguageClass(element, language) {\n\t\tvar className = element.className;\n\t\tclassName = className.replace(lang, ' ') + ' language-' + language;\n\t\telement.className = className.replace(/\\s+/g, ' ').trim();\n\t}\n\n\n\tPrism.hooks.add('before-highlightall', function (env) {\n\t\tenv.selector += ', ' + SELECTOR;\n\t});\n\n\tPrism.hooks.add('before-sanity-check', function (env) {\n\t\tvar pre = /** @type {HTMLPreElement} */ (env.element);\n\t\tif (pre.matches(SELECTOR)) {\n\t\t\tenv.code = ''; // fast-path the whole thing and go to complete\n\n\t\t\tpre.setAttribute(STATUS_ATTR, STATUS_LOADING); // mark as loading\n\n\t\t\t// add code element with loading message\n\t\t\tvar code = pre.appendChild(document.createElement('CODE'));\n\t\t\tcode.textContent = LOADING_MESSAGE;\n\n\t\t\tvar src = pre.getAttribute('data-src');\n\n\t\t\tvar language = env.language;\n\t\t\tif (language === 'none') {\n\t\t\t\t// the language might be 'none' because there is no language set;\n\t\t\t\t// in this case, we want to use the extension as the language\n\t\t\t\tvar extension = (/\\.(\\w+)$/.exec(src) || [, 'none'])[1];\n\t\t\t\tlanguage = EXTENSIONS[extension] || extension;\n\t\t\t}\n\n\t\t\t// set language classes\n\t\t\tsetLanguageClass(code, language);\n\t\t\tsetLanguageClass(pre, language);\n\n\t\t\t// preload the language\n\t\t\tvar autoloader = Prism.plugins.autoloader;\n\t\t\tif (autoloader) {\n\t\t\t\tautoloader.loadLanguages(language);\n\t\t\t}\n\n\t\t\t// load file\n\t\t\tvar xhr = new XMLHttpRequest();\n\t\t\txhr.open('GET', src, true);\n\t\t\txhr.onreadystatechange = function () {\n\t\t\t\tif (xhr.readyState == 4) {\n\t\t\t\t\tif (xhr.status < 400 && xhr.responseText) {\n\t\t\t\t\t\t// mark as loaded\n\t\t\t\t\t\tpre.setAttribute(STATUS_ATTR, STATUS_LOADED);\n\n\t\t\t\t\t\t// highlight code\n\t\t\t\t\t\tcode.textContent = xhr.responseText;\n\t\t\t\t\t\tPrism.highlightElement(code);\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// mark as failed\n\t\t\t\t\t\tpre.setAttribute(STATUS_ATTR, STATUS_FAILED);\n\n\t\t\t\t\t\tif (xhr.status >= 400) {\n\t\t\t\t\t\t\tcode.textContent = FAILURE_MESSAGE(xhr.status, xhr.statusText);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcode.textContent = FAILURE_EMPTY_MESSAGE;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t\txhr.send(null);\n\t\t}\n\t});\n\n\tPrism.plugins.fileHighlight = {\n\t\t/**\n\t\t * Executes the File Highlight plugin for all matching `pre` elements under the given container.\n\t\t *\n\t\t * Note: Elements which are already loaded or currently loading will not be touched by this method.\n\t\t *\n\t\t * @param {ParentNode} [container=document]\n\t\t */\n\t\thighlight: function highlight(container) {\n\t\t\tvar elements = (container || document).querySelectorAll(SELECTOR);\n\n\t\t\tfor (var i = 0, element; element = elements[i++];) {\n\t\t\t\tPrism.highlightElement(element);\n\t\t\t}\n\t\t}\n\t};\n\n\tvar logged = false;\n\t/** @deprecated Use `Prism.plugins.fileHighlight.highlight` instead. */\n\tPrism.fileHighlight = function () {\n\t\tif (!logged) {\n\t\t\tconsole.warn('Prism.fileHighlight is deprecated. Use `Prism.plugins.fileHighlight.highlight` instead.');\n\t\t\tlogged = true;\n\t\t}\n\t\tPrism.plugins.fileHighlight.highlight.apply(this, arguments);\n\t}\n\n})();\n","/**\n * convert hex to rgba\n * https://stackoverflow.com/questions/5623838/rgb-to-hex-and-hex-to-rgb\n * @param {string} hex\n * @param {number=} opacity\n * @return {string}\n */\nexport const hexToRgba = (hex, opacity = 0.9) => {\n    const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    if(!result) return '';\n\n    const r = parseInt(result[1], 16);\n    const g = parseInt(result[2], 16);\n    const b = parseInt(result[3], 16);\n\n    return `rgba(${r}, ${g}, ${b}, ${opacity})`;\n};","import { hexToRgba } from './color-provider';\n\n/**\n * css source\n * @type {string}\n */\nexport const cssSource = `\nhtml, body{\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    padding: 0;\n    margin: 0;\n    font-size: 1rem;\n    background: #fff;\n    color: #111;\n    width: 100vw;\n    min-height: 100vh;\n    perspective: 2000px;\n}\n\n.cube{\n    --width: 200px;\n    --height: 200px;\n    --depth: 200px;\n    --duration: 4s;\n    --easing: linear;\n\n    width: var(--width);\n    height: var(--height);\n    position: relative;\n\n    transform-style: preserve-3d;\n\n    font-size: 1.5rem;\n    font-weight: bold;\n    transition: 1s all;\n    \n    margin: auto;\n}\n\n/**\n * animations\n */\n.cube.rotation-combined{\n    animation: cube-rotation-combined var(--duration) infinite var(--easing);\n}\n\n@keyframes cube-rotation-combined {\n    25% { transform: rotateX(180deg) }\n    50% { transform: rotateY(180deg) rotateX(180deg) }\n    75% { transform: rotateY(180deg) }\n    100% { transform: rotateX(360deg) rotateY(360deg) }\n}\n\n.cube.rotation-y{\n    animation: cube-rotation-y var(--duration) infinite var(--easing);\n}\n\n@keyframes cube-rotation-y {\n    100% { transform: rotateY(360deg) }\n}\n\n.cube.rotation-x{\n    animation: cube-rotation-x var(--duration) infinite var(--easing);\n}\n\n@keyframes cube-rotation-x {\n    100% { transform: rotateX(360deg) }\n}\n\n.cube.rotation-z{\n    animation: cube-rotation-z var(--duration) infinite var(--easing);\n}\n\n@keyframes cube-rotation-z {\n    100% { transform: rotateZ(360deg) }\n}\n\n.cube.rotation-xy{\n    animation: cube-rotation-xy var(--duration) infinite var(--easing);\n}\n\n@keyframes cube-rotation-xy {\n    100% { transform: rotateX(360deg) rotateY(360deg) }\n}\n\n.cube.rotation-xyz{\n    animation: cube-rotation-xyz var(--duration) infinite var(--easing);\n}\n\n@keyframes cube-rotation-xyz {\n    100% { transform: rotateZ(360deg) rotateY(360deg) rotateX(360deg) }\n}\n\n.cube-face{\n    width: 100%;\n    height: 100%;\n\n    position: absolute;\n    top: 0;\n    left: 0;\n\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    text-align: center;\n}\n\n.cube-face{\n    border: 1px solid #000;\n}\n\n.cube-face-front,\n.cube-face-back{\n    width: var(--width);\n    height: var(--height);\n    background: linear-gradient(to bottom left, transparent, rgba(0,0,0,0.2) 50%, rgba(0,0,0,0.3) 51%, transparent);\n}\n\n.cube-face-front{\n    transform: rotateY(0deg) translateZ(calc(var(--depth) / 2));\n}\n\n.cube-face-back{\n    transform: rotateY(180deg) translateZ(calc(var(--depth) / 2));\n}\n\n.cube-face-left,\n.cube-face-right{\n    width: var(--depth);\n    height: var(--height);\n    background: linear-gradient(to bottom right, transparent,rgba(0,0,0,0.2) 50%, rgba(0,0,0,0.3) 51%, transparent);\n}\n\n.cube-face-left{\n    left: calc(-1 * var(--depth) / 2);\n}\n\n.cube-face-right{\n    left: calc(var(--width) - var(--depth) / 2);\n}\n\n.cube-face-left{\n    transform: rotateY(-90deg) translateZ(0);\n}\n\n.cube-face-right{\n    transform: rotateY(90deg) translateZ(0);\n}\n\n.cube-face-top,\n.cube-face-bottom{\n    width: var(--width);\n    height: var(--depth);\n    background: linear-gradient(to bottom right, transparent, rgba(0,0,0,0.2) 50%, rgba(0,0,0,0.3) 51%, transparent);\n}\n\n.cube-face-top{\n    top: calc(-1 * var(--depth));\n}\n\n.cube-face-bottom{\n    top: var(--height);\n}\n\n.cube-face-top{\n    transform: rotateX(90deg) translateZ(calc(-1 * var(--depth) / 2));\n}\n\n.cube-face-bottom{\n    transform: rotateX(-90deg) translateZ(calc(-1 * var(--depth) / 2));\n}\n\n`;\n\n/**\n * get HTML\n * @param {object} storeData\n * @return {string}\n */\nexport const getHTML = storeData => {\n    return `\n<div class=\"cube rotation-${storeData.rotationType}\" style=\"\n    --width: ${storeData.width}px; \n    --height: ${storeData.height}px; \n    --depth: ${storeData.depth}px; \n    --easing: ${storeData.easingType};\n    --duration: ${storeData.duration}s;\n    font-size: ${storeData.fontSize}rem;\">\n    \n    <div class=\"cube-face cube-face-front\" style=\"background-color: ${hexToRgba(storeData.frontFaceBgColor)}\">${storeData.frontFaceText}</div>\n    <div class=\"cube-face cube-face-back\" style=\"background-color: ${hexToRgba(storeData.backFaceBgColor)}\">${storeData.backFaceText}</div>\n    <div class=\"cube-face cube-face-left\" style=\"background-color: ${hexToRgba(storeData.leftFaceBgColor)}\">${storeData.leftFaceText}</div>\n    <div class=\"cube-face cube-face-right\" style=\"background-color: ${hexToRgba(storeData.rightFaceBgColor)}\">${storeData.rightFaceText}</div>\n    <div class=\"cube-face cube-face-top\" style=\"background-color: ${hexToRgba(storeData.topFaceBgColor)}\">${storeData.topFaceText}</div>\n    <div class=\"cube-face cube-face-bottom\" style=\"background-color: ${hexToRgba(storeData.bottomFaceBgColor)}\">${storeData.bottomFaceText}</div>\n</div>\n        `;\n};\n\n/**\n * generate html download file as data-url\n * @param {object} storeData\n * @return {string}\n */\nexport const generateHTMLDownloadFile = storeData => {\n\n    const html = `\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n    <title>CSS 3D Flip Card Generator</title>\n    \n<style>\n${cssSource}\n</style>\n\n</head>\n<body>  \n${getHTML(storeData)}\n\n</body>\n</html>`;\n    const blob = new Blob([html], {type: 'text/html'});\n    return window.URL.createObjectURL(blob);\n\n    /*const $download = document.getElementById('download-btn');\n    $download.href = url;\n    // window.URL.revokeObjectURL(url);*/\n};","/**\n * copy to clipboard\n * @param {string} content\n */\nexport const copyToClipboard = content => {\n    const textArea = document.createElement('textarea');\n    textArea.textContent = content;\n    document.body.append(textArea);\n    textArea.select();\n    document.execCommand('copy');\n    textArea.remove();\n};","<style src=\"./CodePanel.css\"></style>\n\n<svelte:head>\n    <link\n            rel=\"stylesheet\"\n            href=\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.23.0/themes/prism-okaidia.min.css\"\n            integrity=\"sha512-mIs9kKbaw6JZFfSuo+MovjU+Ntggfoj8RwAmJbVXQ5mkAX5LlgETQEweFPI18humSPHymTb5iikEOKWF7I8ncQ==\"\n            crossorigin=\"anonymous\" />\n</svelte:head>\n\n<script>\n    import Prism from 'prismjs';\n    import store from '../../DAL/store';\n    import { getHTML, cssSource, generateHTMLDownloadFile } from '../../domain/source-code-provider';\n    import { copyToClipboard } from '../../domain/copy-provider';\n\n    // https://prismjs.com/\n    window.Prism = window.Prism || {};\n    //window.Prism.manual = true;\n\n    let storeData = {};\n\n    let html = '';\n    let css = '';\n\n    let htmlElement = null;\n\n    /**\n     * subscribe to all changes on store items\n     * @param {object} updatedStore\n     */\n    store.subscribe(updatedStore => {\n        storeData = updatedStore;\n        html = Prism.highlight(`${getHTML(storeData)}`, Prism.languages.html, 'html');\n        css = Prism.highlight(cssSource, Prism.languages.css, 'css');\n    });\n</script>\n\n<div class=\"controls code-panel\">\n\n    <!-- html -->\n    <div class=\"control\">\n        <h3>HTML <button\n                type=\"button\"\n                id=\"copy-html\"\n                class=\"copy-code-btn\"\n                on:click={() => { copyToClipboard(getHTML(storeData)) }}\n        >Copy Code</button></h3>\n\n        <pre class=\"code-pre\" bind:this={htmlElement}>\n            <code id=\"html-code\">{@html html}</code>\n        </pre>\n    </div>\n\n    <!-- css -->\n    <div class=\"control\">\n        <h3>CSS <button\n                    type=\"button\"\n                    id=\"copy-css\"\n                    class=\"copy-code-btn\"\n                    on:click={() => { copyToClipboard(cssSource) }}\n        >Copy Code</button></h3>\n        <pre class=\"code-pre\">\n            <code id=\"css-code\">{@html css}</code>\n        </pre>\n    </div>\n\n    <div class=\"download-btn-wrapper\"><a href=\"{ generateHTMLDownloadFile(storeData) }\" id=\"download-btn\" download=\"index.html\">Download</a></div>\n</div>","<style src=\"./Preview.css\"></style>\n\n<script>\n    import store from '../../DAL/store';\n    import { hexToRgba } from '../../domain/color-provider';\n    // import Modal from '../Modal/Modal.svelte';\n    //import './Preview.css';\n</script>\n\n<div class=\"preview\">\n\n    <div class=\"cube rotation-{$store.rotationType}\" style=\"\n        --width: {$store.width}px;\n        --height: {$store.height}px;\n        --depth: {$store.depth}px;\n        --duration: {$store.duration}s;\n        --easing: {$store.easingType};\n        font-size: {$store.fontSize}rem;\">\n\n        <div class=\"cube-face cube-face-front\" style=\"background-color: {hexToRgba($store.frontFaceBgColor)}\">{$store.frontFaceText}</div>\n        <div class=\"cube-face cube-face-back\" style=\"background-color: {hexToRgba($store.backFaceBgColor)}\">{$store.backFaceText}</div>\n        <div class=\"cube-face cube-face-left\" style=\"background-color: {hexToRgba($store.leftFaceBgColor)}\">{$store.leftFaceText}</div>\n        <div class=\"cube-face cube-face-right\" style=\"background-color: {hexToRgba($store.rightFaceBgColor)}\">{$store.rightFaceText}</div>\n        <div class=\"cube-face cube-face-top\" style=\"background-color: {hexToRgba($store.topFaceBgColor)}\">{$store.topFaceText}</div>\n        <div class=\"cube-face cube-face-bottom\" style=\"background-color: {hexToRgba($store.bottomFaceBgColor)}\">{$store.bottomFaceText}</div>\n    </div>\n\n    <!--<Modal>\n        <div>Content</div>\n        <div slot=\"bottom-panel\">aaa</div>\n    </Modal>-->\n</div>\n","import App from './App.svelte';\n\nconst app = new App({\n\ttarget: document.body,\n\tprops: {\n\t\t// name: 'world'\n\t}\n});\n\nexport default app;"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","_typeof","component_subscribe","component","store","callback","$$","on_destroy","push","callbacks","unsub","subscribe","unsubscribe","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","children","Array","from","childNodes","set_data","wholeText","set_style","key","important","style","setProperty","current_component","set_current_component","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","flushing","seen_callbacks","Set","flush","i","length","update","pop","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","transition_in","block","local","delete","transition_out","o","outros","c","d","create_component","mount_component","customElement","on_mount","m","new_on_destroy","map","filter","destroy_component","detaching","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","parent_component","bound","on_disconnect","context","Map","skip_bound","ready","ret","hydrate","nodes","l","intro","SvelteComponent","this","$destroy","type","index","indexOf","splice","$$props","obj","$$set","keys","subscriber_queue","KEY","dataFromStorage","window","localStorage","JSON","parse","decodeURIComponent","getItem","ex","getFromStorage","getStringValue","defaultValue","stop","start","subscribers","set","new_value","run_queue","s","invalidate","subscriber","writable","rotationType","easingType","duration","isNaN","Number","leftFaceText","rightFaceText","topFaceText","bottomFaceText","frontFaceText","backFaceText","leftFaceBgColor","rightFaceBgColor","topFaceBgColor","bottomFaceBgColor","frontFaceBgColor","backFaceBgColor","width","height","depth","fontSize","updateFormField","field","currentStore","updated","encodeURIComponent","stringify","setItem","saveToStorage","$store","evt","Prism","_self","lang","uniqueId","_","manual","disableWorkerMessageHandler","util","encode","tokens","Token","content","alias","isArray","replace","prototype","toString","call","slice","objId","defineProperty","clone","deepClone","visited","id","hasOwnProperty","v","getLanguage","test","className","parentElement","match","toLowerCase","currentScript","Error","err","src","exec","stack","scripts","getElementsByTagName","isActive","defaultActivation","no","classList","contains","languages","extend","redef","inside","before","root","grammar","token","newToken","old","DFS","property","propertyType","plugins","highlightAll","async","highlightAllUnder","container","env","selector","hooks","elements","apply","querySelectorAll","highlightElement","language","parent","nodeName","code","textContent","insertHighlightedCode","highlightedCode","innerHTML","Worker","worker","filename","onmessage","postMessage","immediateClose","highlight","tokenize","rest","tokenList","LinkedList","addAfter","head","matchGrammar","list","array","next","tail","toArray","all","matchedStr","matchPattern","pattern","pos","lookbehind","lastIndex","lookbehindLength","startNode","startPos","rematch","patterns","j","cause","patternObj","greedy","global","flags","RegExp","source","currentNode","reach","str","removeCount","to","k","matchStr","after","removeFrom","prev","removeRange","newNode","count","e","tag","classes","attributes","aliases","join","message","close","script","highlightAutomaticallyCallback","hasAttribute","readyState","defer","requestAnimationFrame","setTimeout","WorkerGlobalScope","self","module","exports","markup","tagName","includedCdataInside","def","html","mathml","svg","xml","ssml","atom","rss","string","css","addInlined","clike","javascript","regex","js","Element","matches","msMatchesSelector","webkitMatchesSelector","EXTENSIONS","STATUS_ATTR","STATUS_LOADING","STATUS_LOADED","SELECTOR","pre","extension","setLanguageClass","autoloader","loadLanguages","xhr","XMLHttpRequest","open","onreadystatechange","status","responseText","statusText","send","fileHighlight","logged","console","warn","arguments","trim","hexToRgba","hex","opacity","result","r","parseInt","g","cssSource","getHTML","storeData","generateHTMLDownloadFile","blob","Blob","URL","createObjectURL","copyToClipboard","textArea","body","select","execCommand","remove","htmlElement","updatedStore"],"mappings":"kgHAAA,SAASA,KAgBT,SAASC,EAAIC,UACFA,IAEX,SAASC,WACEC,OAAOC,OAAO,MAEzB,SAASC,EAAQC,GACbA,EAAIC,QAAQP,GAEhB,SAASQ,EAAYC,SACO,mBAAVA,EAElB,SAASC,EAAeC,EAAGC,UAChBD,GAAKA,EAAIC,GAAKA,EAAID,IAAMC,GAAOD,GAAkB,WAAbE,EAAOF,IAAgC,mBAANA,EAyBhF,SAASG,EAAoBC,EAAWC,EAAOC,GAC3CF,EAAUG,GAAGC,WAAWC,KAb5B,SAAmBJ,MACF,MAATA,SACOjB,6BAFcsB,mCAAAA,wBAInBC,EAAQN,EAAMO,gBAANP,EAAmBK,UAC1BC,EAAME,YAAc,kBAAMF,EAAME,eAAgBF,EAQ1BC,CAAUP,EAAOC,IAwIlD,SAASQ,EAAOC,EAAQC,GACpBD,EAAOE,YAAYD,GAEvB,SAASE,EAAOH,EAAQC,EAAMG,GAC1BJ,EAAOK,aAAaJ,EAAMG,GAAU,MAExC,SAASE,EAAOL,GACZA,EAAKM,WAAWC,YAAYP,GAQhC,SAASQ,EAAQC,UACNC,SAASC,cAAcF,GAoBlC,SAASG,EAAKC,UACHH,SAASI,eAAeD,GAEnC,SAASE,WACEH,EAAK,KAKhB,SAASI,EAAOhB,EAAMiB,EAAOC,EAASC,UAClCnB,EAAKoB,iBAAiBH,EAAOC,EAASC,GAC/B,kBAAMnB,EAAKqB,oBAAoBJ,EAAOC,EAASC,IAuB1D,SAASG,EAAKtB,EAAMuB,EAAWC,GACd,MAATA,EACAxB,EAAKyB,gBAAgBF,GAChBvB,EAAK0B,aAAaH,KAAeC,GACtCxB,EAAK2B,aAAaJ,EAAWC,GA4DrC,SAASI,EAASpB,UACPqB,MAAMC,KAAKtB,EAAQuB,YAmC9B,SAASC,EAASpB,EAAMC,GACpBA,EAAO,GAAKA,EACRD,EAAKqB,YAAcpB,IACnBD,EAAKC,KAAOA,GAapB,SAASqB,EAAUlC,EAAMmC,EAAKX,EAAOY,GACjCpC,EAAKqC,MAAMC,YAAYH,EAAKX,EAAOY,EAAY,YAAc,IAwQjE,IAAIG,EACJ,SAASC,EAAsBpD,GAC3BmD,EAAoBnD,EAoDxB,IAAMqD,EAAmB,GAEnBC,EAAoB,GACpBC,EAAmB,GACnBC,EAAkB,GAClBC,EAAmBC,QAAQC,UAC7BC,GAAmB,EAWvB,SAASC,EAAoB3E,GACzBqE,EAAiBlD,KAAKnB,GAK1B,IAAI4E,GAAW,EACTC,EAAiB,IAAIC,IAC3B,SAASC,QACDH,GAEJA,GAAW,IACR,KAGM,IAAII,EAAI,EAAGA,EAAIb,EAAiBc,OAAQD,GAAK,EAAG,KAC3ClE,EAAYqD,EAAiBa,GACnCd,EAAsBpD,GACtBoE,EAAOpE,EAAUG,QAErBiD,EAAsB,MACtBC,EAAiBc,OAAS,EACnBb,EAAkBa,QACrBb,EAAkBe,KAAlBf,OAIC,IAAIY,EAAI,EAAGA,EAAIX,EAAiBY,OAAQD,GAAK,EAAG,KAC3ChE,EAAWqD,EAAiBW,GAC7BH,EAAeO,IAAIpE,KAEpB6D,EAAeQ,IAAIrE,GACnBA,KAGRqD,EAAiBY,OAAS,QACrBd,EAAiBc,aACnBX,EAAgBW,QACnBX,EAAgBa,KAAhBb,GAEJI,GAAmB,EACnBE,GAAW,EACXC,EAAeS,SAEnB,SAASJ,EAAOjE,MACQ,OAAhBA,EAAGsE,SAAmB,CACtBtE,EAAGiE,SACH9E,EAAQa,EAAGuE,mBACLC,EAAQxE,EAAGwE,MACjBxE,EAAGwE,MAAQ,EAAE,GACbxE,EAAGsE,UAAYtE,EAAGsE,SAASG,EAAEzE,EAAG0E,IAAKF,GACrCxE,EAAG2E,aAAatF,QAAQqE,IAiBhC,IAAMkB,EAAW,IAAIf,IAerB,SAASgB,EAAcC,EAAOC,GACtBD,GAASA,EAAMf,IACfa,EAASI,OAAOF,GAChBA,EAAMf,EAAEgB,IAGhB,SAASE,EAAeH,EAAOC,EAAOjE,EAAQf,MACtC+E,GAASA,EAAMI,EAAG,IACdN,EAAST,IAAIW,GACb,OACJF,EAASR,IAAIU,GAxBjBK,UAyBWC,EAAElF,MAAK,WACV0E,EAASI,OAAOF,GACZ/E,IACIe,GACAgE,EAAMO,EAAE,GACZtF,QAGR+E,EAAMI,EAAEH,IA4kBhB,SAASO,EAAiBR,GACtBA,GAASA,EAAMM,IAKnB,SAASG,EAAgB1F,EAAWW,EAAQI,EAAQ4E,SACS3F,EAAUG,GAA3DsE,IAAAA,SAAUmB,IAAAA,SAAUxF,IAAAA,WAAY0E,IAAAA,aACxCL,GAAYA,EAASoB,EAAElF,EAAQI,GAC1B4E,GAED9B,GAAoB,eACViC,EAAiBF,EAASG,IAAI9G,GAAK+G,OAAOvG,GAC5CW,EACAA,EAAWC,WAAXD,IAAmB0F,IAKnBxG,EAAQwG,GAEZ9F,EAAUG,GAAGyF,SAAW,MAGhCd,EAAatF,QAAQqE,GAEzB,SAASoC,EAAkBjG,EAAWkG,OAC5B/F,EAAKH,EAAUG,GACD,OAAhBA,EAAGsE,WACHnF,EAAQa,EAAGC,YACXD,EAAGsE,UAAYtE,EAAGsE,SAASe,EAAEU,GAG7B/F,EAAGC,WAAaD,EAAGsE,SAAW,KAC9BtE,EAAG0E,IAAM,IAGjB,SAASsB,EAAWnG,EAAWkE,IACI,IAA3BlE,EAAUG,GAAGwE,MAAM,KACnBtB,EAAiBhD,KAAKL,GAluBrB4D,IACDA,GAAmB,EACnBH,EAAiB2C,KAAKnC,IAkuBtBjE,EAAUG,GAAGwE,MAAM0B,KAAK,IAE5BrG,EAAUG,GAAGwE,MAAOT,EAAI,GAAM,IAAO,GAAMA,EAAI,GAEnD,SAASoC,GAAKtG,EAAW+B,EAASwE,EAAUC,EAAiBC,EAAWC,OAAO/B,yDAAQ,EAAE,GAC/EgC,EAAmBxD,EACzBC,EAAsBpD,OAChBG,EAAKH,EAAUG,GAAK,CACtBsE,SAAU,KACVI,IAAK,KAEL6B,MAAAA,EACAtC,OAAQpF,EACRyH,UAAAA,EACAG,MAAOzH,IAEPyG,SAAU,GACVxF,WAAY,GACZyG,cAAe,GACfnC,cAAe,GACfI,aAAc,GACdgC,QAAS,IAAIC,IAAIJ,EAAmBA,EAAiBxG,GAAG2G,QAAU/E,EAAQ+E,SAAW,IAErFxG,UAAWnB,IACXwF,MAAAA,EACAqC,YAAY,GAEZC,GAAQ,KACZ9G,EAAG0E,IAAM0B,EACHA,EAASvG,EAAW+B,EAAQ2E,OAAS,IAAI,SAACxC,EAAGgD,OACrC9E,qFAAgC8E,SAClC/G,EAAG0E,KAAO4B,EAAUtG,EAAG0E,IAAIX,GAAI/D,EAAG0E,IAAIX,GAAK9B,MACtCjC,EAAG6G,YAAc7G,EAAGyG,MAAM1C,IAC3B/D,EAAGyG,MAAM1C,GAAG9B,GACZ6E,GACAd,EAAWnG,EAAWkE,IAEvBgD,KAET,GACN/G,EAAGiE,SACH6C,GAAQ,EACR3H,EAAQa,EAAGuE,eAEXvE,EAAGsE,WAAW+B,GAAkBA,EAAgBrG,EAAG0E,KAC/C9C,EAAQpB,OAAQ,IACZoB,EAAQoF,QAAS,KACXC,EAAQ5E,EAAST,EAAQpB,QAE/BR,EAAGsE,UAAYtE,EAAGsE,SAAS4C,EAAED,GAC7BA,EAAM5H,QAAQyB,QAIdd,EAAGsE,UAAYtE,EAAGsE,SAASc,IAE3BxD,EAAQuF,OACRtC,EAAchF,EAAUG,GAAGsE,UAC/BiB,EAAgB1F,EAAW+B,EAAQpB,OAAQoB,EAAQhB,OAAQgB,EAAQ4D,eACnE1B,IAEJb,EAAsBuD,OAkDpBY,oFACF,WACItB,EAAkBuB,KAAM,QACnBC,SAAWzI,qBAEpB,SAAI0I,EAAMxH,OACAI,EAAakH,KAAKrH,GAAGG,UAAUoH,KAAUF,KAAKrH,GAAGG,UAAUoH,GAAQ,WACzEpH,EAAUD,KAAKH,GACR,eACGyH,EAAQrH,EAAUsH,QAAQ1H,IACjB,IAAXyH,GACArH,EAAUuH,OAAOF,EAAO,wBAGpC,SAAKG,GA//CT,IAAkBC,EAggDNP,KAAKQ,QAhgDCD,EAggDkBD,EA//CG,IAA5B1I,OAAO6I,KAAKF,GAAK5D,eAggDXhE,GAAG6G,YAAa,OAChBgB,MAAMF,QACN3H,GAAG6G,YAAa,giDCliD3BkB,GAAmB,GCHzB,IAAMC,GAAM,kBCINC,GDYwB,eACtBC,OAAOC,aAAc,OAAO,SAE5BlG,EAAQ,SAGRA,EAAQmG,KAAKC,MAAMC,mBAAmBJ,OAAOC,aAAaI,QAAQP,MAEtE,MAAMQ,WAEFvG,GAAc,KCtBEwG,GAQlBC,GAAiB,SAACxH,EAAMyH,UACtBV,IAAoBA,GAAgB/G,GACjC+G,GAAgB/G,GAD+ByH,GAQpD7I,GFFN,SAAkBmC,OACV2G,EADiBC,yDAAQhK,EAEvBiK,EAAc,YACXC,EAAIC,MACLxJ,EAAeyC,EAAO+G,KACtB/G,EAAQ+G,EACJJ,GAAM,SACAK,GAAalB,GAAiB/D,OAC3BD,EAAI,EAAGA,EAAI+E,EAAY9E,OAAQD,GAAK,EAAG,KACtCmF,EAAIJ,EAAY/E,GACtBmF,EAAE,KACFnB,GAAiB7H,KAAKgJ,EAAGjH,MAEzBgH,EAAW,KACN,IAAIlF,EAAI,EAAGA,EAAIgE,GAAiB/D,OAAQD,GAAK,EAC9CgE,GAAiBhE,GAAG,GAAGgE,GAAiBhE,EAAI,IAEhDgE,GAAiB/D,OAAS,aAKjCC,EAAOlF,GACZgK,EAAIhK,EAAGkD,aAEF5B,EAAUvB,OAAKqK,yDAAatK,EAC3BuK,EAAa,CAACtK,EAAKqK,UACzBL,EAAY5I,KAAKkJ,GACU,IAAvBN,EAAY9E,SACZ4E,EAAOC,EAAME,IAAQlK,GAEzBC,EAAImD,GACG,eACGuF,EAAQsB,EAAYrB,QAAQ2B,IACnB,IAAX5B,GACAsB,EAAYpB,OAAOF,EAAO,GAEH,IAAvBsB,EAAY9E,SACZ4E,IACAA,EAAO,aAIZ,CAAEG,IAAAA,EAAK9E,OAAAA,EAAQ5D,UAAAA,GEzCZgJ,CAAS,CAGnBC,aAAcZ,GAAe,eAAgB,KAC7Ca,WAAYb,GAAe,aAAc,UACzCc,SAAUvB,KAAoBwB,MAAMC,OAAOzB,GAAgBuB,WAAavB,GAAgBuB,SAAW,EAGnGG,aAAcjB,GAAe,eAAgB,QAC7CkB,cAAelB,GAAe,gBAAiB,SAC/CmB,YAAanB,GAAe,cAAe,OAC3CoB,eAAgBpB,GAAe,iBAAkB,UACjDqB,cAAerB,GAAe,gBAAiB,SAC/CsB,aAActB,GAAe,OAAQ,SAGrCuB,gBAAiBvB,GAAe,kBAAmB,WACnDwB,iBAAkBxB,GAAe,mBAAoB,WACrDyB,eAAgBzB,GAAe,iBAAkB,WACjD0B,kBAAmB1B,GAAe,oBAAqB,WACvD2B,iBAAkB3B,GAAe,mBAAoB,WACrD4B,gBAAiB5B,GAAe,kBAAmB,WAGnD6B,MAAOtC,KAAoBwB,MAAMC,OAAOzB,GAAgBsC,QAAUtC,GAAgBsC,MAAQ,IAC1FC,OAAQvC,KAAoBwB,MAAMC,OAAOzB,GAAgBuC,SAAWvC,GAAgBuC,OAAS,IAC7FC,MAAOxC,KAAoBwB,MAAMC,OAAOzB,GAAgBwC,QAAUxC,GAAgBwC,MAAQ,IAG1FC,SAAUzC,KAAoBwB,MAAMC,OAAOzB,GAAgByC,WAAazC,GAAgByC,SAAW,yiBC+GtDhG,KAAO6F,YAYL7F,KAAO8F,aAYR9F,KAAO+F,YAYS/F,KAAO8E,eAajB9E,KAAOgG,i2KA3CtChG,KAAO6F,gQAYP7F,KAAO8F,gQAYP9F,KAAO+F,sRAaP/F,KAAO8E,0RAaT9E,KAAOgG,mPAS0BhG,KAAOqF,qMAKXrF,KAAOsF,0MAKJtF,KAAOiF,sMAKTjF,KAAOkF,yMAKNlF,KAAOmF,uMAKPnF,KAAOoF,mMAMEpF,KAAO2F,oOAKR3F,KAAO4F,kOAKP5F,KAAOuF,mOAKNvF,KAAOwF,mOAKTxF,KAAOyF,kOAKJzF,KAAO0F,2RAlPvC1F,KAAO4E,sEAYP5E,KAAO4E,sEAYP5E,KAAO4E,sEAYP5E,KAAO4E,sEAYP5E,KAAO4E,sEAYP5E,KAAO4E,2FAgBP5E,KAAO6E,yEAYP7E,KAAO6E,8EAYP7E,KAAO6E,8EAYP7E,KAAO6E,6xDAhHP7E,KAAO4E,6CAYP5E,KAAO4E,6CAYP5E,KAAO4E,6CAYP5E,KAAO4E,6CAYP5E,KAAO4E,6CAYP5E,KAAO4E,6CAgBP5E,KAAO6E,6CAYP7E,KAAO6E,6CAYP7E,KAAO6E,6CAYP7E,KAAO6E,6BASU7E,KAAO6F,qCAM/B7F,KAAO6F,uCAMmB7F,KAAO8F,sCAMjC9F,KAAO8F,wCAMkB9F,KAAO+F,qCAMhC/F,KAAO+F,uCAMkC/F,KAAO8E,wCAOhD9E,KAAO8E,0CAMwB9E,KAAOgG,wCAOxChG,KAAOgG,0CAS0BhG,KAAOqF,8DAKXrF,KAAOsF,6DAKJtF,KAAOiF,6DAKTjF,KAAOkF,8DAKNlF,KAAOmF,4DAKPnF,KAAOoF,+DAMEpF,KAAO2F,kDAKR3F,KAAO4F,iDAKP5F,KAAOuF,iDAKNvF,KAAOwF,kDAKTxF,KAAOyF,gDAKJzF,KAAO0F,wgBA/Q7DO,WAAmBC,EAAO3I,GAE5BnC,GAAMmE,QAAO,SAAA4G,OAEHC,SACCD,WACFD,EAAQ3I,WFXI,SAAAX,MACrB4G,OAAOC,kBACLlG,EAAQ8I,mBAAmB3C,KAAK4C,UAAU1J,IAChD4G,OAAOC,aAAa8C,QAAQjD,GAAK/F,IEWzBiJ,CAAcJ,GAEPA,4BAkBaK,EAAO7B,6CACR,SAAA8B,GAAST,EAAgB,eAAgBS,EAAI5K,OAAOyB,mBAWnDkJ,EAAO7B,qCACR,SAAA8B,GAAST,EAAgB,eAAgBS,EAAI5K,OAAOyB,mBAWnDkJ,EAAO7B,qCACR,SAAA8B,GAAST,EAAgB,eAAgBS,EAAI5K,OAAOyB,mBAWnDkJ,EAAO7B,qCACR,SAAA8B,GAAST,EAAgB,eAAgBS,EAAI5K,OAAOyB,mBAWnDkJ,EAAO7B,qCACR,SAAA8B,GAAST,EAAgB,eAAgBS,EAAI5K,OAAOyB,mBAWnDkJ,EAAO7B,qCACR,SAAA8B,GAAST,EAAgB,eAAgBS,EAAI5K,OAAOyB,mBAenDkJ,EAAO5B,mCACR,SAAA6B,GAAST,EAAgB,aAAcS,EAAI5K,OAAOyB,mBAWjDkJ,EAAO5B,mCACR,SAAA6B,GAAST,EAAgB,aAAcS,EAAI5K,OAAOyB,mBAWjDkJ,EAAO5B,mCACR,SAAA6B,GAAST,EAAgB,aAAcS,EAAI5K,OAAOyB,mBAWjDkJ,EAAO5B,mCACR,SAAA6B,GAAST,EAAgB,aAAcS,EAAI5K,OAAOyB,QAetD,SAAAmJ,UAAOT,EAAgB,QAASjB,OAAO0B,EAAI5K,OAAOyB,QAAU,MAY5D,SAAAmJ,UAAOT,EAAgB,SAAUjB,OAAO0B,EAAI5K,OAAOyB,QAAU,MAY7D,SAAAmJ,UAAOT,EAAgB,QAASjB,OAAO0B,EAAI5K,OAAOyB,QAAU,MAa5D,SAAAmJ,UAAOT,EAAgB,WAAYjB,OAAO0B,EAAI5K,OAAOyB,QAAU,IAajE,SAAAmJ,UAAOT,EAAgB,WAAYjB,OAAO0B,EAAI5K,OAAOyB,QAAU,MAQC,SAAAmJ,UAAOT,EAAgB,gBAAiBS,EAAI5K,OAAOyB,QAKxD,SAAAmJ,UAAOT,EAAgB,eAAgBS,EAAI5K,OAAOyB,QAK/C,SAAAmJ,UAAOT,EAAgB,eAAgBS,EAAI5K,OAAOyB,QAKnD,SAAAmJ,UAAOT,EAAgB,gBAAiBS,EAAI5K,OAAOyB,QAKpD,SAAAmJ,UAAOT,EAAgB,cAAeS,EAAI5K,OAAOyB,QAK9C,SAAAmJ,UAAOT,EAAgB,iBAAkBS,EAAI5K,OAAOyB,QAM1C,SAAAmJ,UAAOT,EAAgB,mBAAoBS,EAAI5K,OAAOyB,QAKxD,SAAAmJ,UAAOT,EAAgB,kBAAmBS,EAAI5K,OAAOyB,QAKrD,SAAAmJ,UAAOT,EAAgB,kBAAmBS,EAAI5K,OAAOyB,QAKnD,SAAAmJ,UAAOT,EAAgB,mBAAoBS,EAAI5K,OAAOyB,QAK1D,SAAAmJ,UAAOT,EAAgB,iBAAkBS,EAAI5K,OAAOyB,QAK9C,SAAAmJ,UAAOT,EAAgB,oBAAqBS,EAAI5K,OAAOyB,8TCnQvJoJ,EAAS,SAAUC,OAGnBC,EAAO,8BACPC,EAAW,EAGXC,EAAI,CAsBPC,OAAQJ,EAAMD,OAASC,EAAMD,MAAMK,OACnCC,4BAA6BL,EAAMD,OAASC,EAAMD,MAAMM,4BAWxDC,KAAM,CACLC,OAAQ,SAASA,EAAOC,UACnBA,aAAkBC,EACd,IAAIA,EAAMD,EAAOvE,KAAMsE,EAAOC,EAAOE,SAAUF,EAAOG,OACnD3J,MAAM4J,QAAQJ,GACjBA,EAAOlG,IAAIiG,GAEXC,EAAOK,QAAQ,KAAM,SAASA,QAAQ,KAAM,QAAQA,QAAQ,UAAW,MAoBhF5E,KAAM,SAAUrC,UACRjG,OAAOmN,UAAUC,SAASC,KAAKpH,GAAGqH,MAAM,GAAI,IASpDC,MAAO,SAAU5E,UACXA,EAAG,MACP3I,OAAOwN,eAAe7E,EAAK,OAAQ,CAAE3F,QAASuJ,IAExC5D,EAAG,MAaX8E,MAAO,SAASC,EAAUzH,EAAG0H,OAGxBF,EAAOG,SAFXD,EAAUA,GAAW,GAGbnB,EAAEG,KAAKrE,KAAKrC,QACd,YACJ2H,EAAKpB,EAAEG,KAAKY,MAAMtH,GACd0H,EAAQC,UACJD,EAAQC,OAKX,IAAIjK,KAHT8J,KACAE,EAAQC,GAAMH,EAEExH,EACXA,EAAE4H,eAAelK,KACpB8J,EAAM9J,GAAO+J,EAAUzH,EAAEtC,GAAMgK,iBAM7B,eACJC,EAAKpB,EAAEG,KAAKY,MAAMtH,GACd0H,EAAQC,GACJD,EAAQC,IAEhBH,EAAQ,GACRE,EAAQC,GAAMH,EAE2BxH,EAAK7F,SAAQ,SAAU0N,EAAGhJ,GAClE2I,EAAM3I,GAAK4I,EAAUI,EAAGH,wBAMlB1H,IAYV8H,YAAa,SAAU/L,QACfA,IAAYsK,EAAK0B,KAAKhM,EAAQiM,YACpCjM,EAAUA,EAAQkM,qBAEflM,GACKA,EAAQiM,UAAUE,MAAM7B,IAAS,EAAG,SAAS,GAAG8B,cAElD,QAURC,cAAe,cACU,oBAAbnM,gBACH,QAEJ,kBAAmBA,gBACKA,iCAQrB,IAAIoM,MACT,MAAOC,OAQJC,GAAO,+BAA+BC,KAAKF,EAAIG,QAAU,IAAI,MAC7DF,EAAK,KACJG,EAAUzM,SAAS0M,qBAAqB,cACvC,IAAI9J,KAAK6J,KACTA,EAAQ7J,GAAG0J,KAAOA,SACdG,EAAQ7J,UAIX,OAuBT+J,SAAU,SAAU7M,EAASiM,EAAWa,WACnCC,EAAK,MAAQd,EAEVjM,GAAS,KACXgN,EAAYhN,EAAQgN,aACpBA,EAAUC,SAAShB,UACf,KAEJe,EAAUC,SAASF,UACf,EAER/M,EAAUA,EAAQkM,sBAEVY,IAWXI,UAAW,CA6BVC,OAAQ,SAAUvB,EAAIwB,OACjB9C,EAAOE,EAAEG,KAAKc,MAAMjB,EAAE0C,UAAUtB,QAE/B,IAAIjK,KAAOyL,EACf9C,EAAK3I,GAAOyL,EAAMzL,UAGZ2I,GA8ER1K,aAAc,SAAUyN,EAAQC,EAAQ5N,EAAQ6N,OAE3CC,GADJD,EAAOA,GAA4B/C,EAAE0C,WAClBG,GAEfvH,EAAM,OAEL,IAAI2H,KAASD,KACbA,EAAQ3B,eAAe4B,GAAQ,IAE9BA,GAASH,MACP,IAAII,KAAYhO,EAChBA,EAAOmM,eAAe6B,KACzB5H,EAAI4H,GAAYhO,EAAOgO,IAMrBhO,EAAOmM,eAAe4B,KAC1B3H,EAAI2H,GAASD,EAAQC,QAKpBE,EAAMJ,EAAKF,UACfE,EAAKF,GAAUvH,EAGf0E,EAAE0C,UAAUU,IAAIpD,EAAE0C,WAAW,SAASvL,EAAKX,GACtCA,IAAU2M,GAAOhM,GAAO0L,SACtB1L,GAAOmE,MAIPA,GAIR8H,IAAK,SAASA,EAAI3J,EAAGnF,EAAUwH,EAAMqF,GACpCA,EAAUA,GAAW,OAEjBJ,EAAQf,EAAEG,KAAKY,UAEd,IAAIzI,KAAKmB,KACTA,EAAE4H,eAAe/I,GAAI,CACxBhE,EAASuM,KAAKpH,EAAGnB,EAAGmB,EAAEnB,GAAIwD,GAAQxD,OAE9B+K,EAAW5J,EAAEnB,GACbgL,EAAetD,EAAEG,KAAKrE,KAAKuH,GAEV,WAAjBC,GAA8BnC,EAAQJ,EAAMsC,IAItB,UAAjBC,GAA6BnC,EAAQJ,EAAMsC,MACnDlC,EAAQJ,EAAMsC,KAAa,EAC3BD,EAAIC,EAAU/O,EAAUgE,EAAG6I,KAL3BA,EAAQJ,EAAMsC,KAAa,EAC3BD,EAAIC,EAAU/O,EAAU,KAAM6M,OAWnCoC,QAAS,GAcTC,aAAc,SAASC,EAAOnP,GAC7B0L,EAAE0D,kBAAkBhO,SAAU+N,EAAOnP,IAkBtCoP,kBAAmB,SAASC,EAAWF,EAAOnP,OACzCsP,EAAM,CACTtP,SAAUA,EACVqP,UAAWA,EACXE,SAAU,oGAGX7D,EAAE8D,MAAMzQ,IAAI,sBAAuBuQ,GAEnCA,EAAIG,SAAWlN,MAAM8J,UAAUG,MAAMkD,MAAMJ,EAAID,UAAUM,iBAAiBL,EAAIC,WAE9E7D,EAAE8D,MAAMzQ,IAAI,gCAAiCuQ,OAExC,IAAWpO,EAAP8C,EAAI,EAAY9C,EAAUoO,EAAIG,SAASzL,MAC/C0H,EAAEkE,iBAAiB1O,GAAmB,IAAViO,EAAgBG,EAAItP,WAgClD4P,iBAAkB,SAAS1O,EAASiO,EAAOnP,OAEtC6P,EAAWnE,EAAEG,KAAKoB,YAAY/L,GAC9BwN,EAAUhD,EAAE0C,UAAUyB,GAG1B3O,EAAQiM,UAAYjM,EAAQiM,UAAUf,QAAQZ,EAAM,IAAIY,QAAQ,OAAQ,KAAO,aAAeyD,MAG1FC,EAAS5O,EAAQkM,cACjB0C,GAA4C,QAAlCA,EAAOC,SAASzC,gBAC7BwC,EAAO3C,UAAY2C,EAAO3C,UAAUf,QAAQZ,EAAM,IAAIY,QAAQ,OAAQ,KAAO,aAAeyD,OAKzFP,EAAM,CACTpO,QAASA,EACT2O,SAAUA,EACVnB,QAASA,EACTsB,KANU9O,EAAQ+O,sBASVC,EAAsBC,GAC9Bb,EAAIa,gBAAkBA,EAEtBzE,EAAE8D,MAAMzQ,IAAI,gBAAiBuQ,GAE7BA,EAAIpO,QAAQkP,UAAYd,EAAIa,gBAE5BzE,EAAE8D,MAAMzQ,IAAI,kBAAmBuQ,GAC/B5D,EAAE8D,MAAMzQ,IAAI,WAAYuQ,GACxBtP,GAAYA,EAASuM,KAAK+C,EAAIpO,YAG/BwK,EAAE8D,MAAMzQ,IAAI,sBAAuBuQ,IAE9BA,EAAIU,YACRtE,EAAE8D,MAAMzQ,IAAI,WAAYuQ,QACxBtP,GAAYA,EAASuM,KAAK+C,EAAIpO,aAI/BwK,EAAE8D,MAAMzQ,IAAI,mBAAoBuQ,GAE3BA,EAAIZ,WAKLS,GAAS5D,EAAM8E,OAAQ,KACtBC,EAAS,IAAID,OAAO3E,EAAE6E,UAE1BD,EAAOE,UAAY,SAASnF,GAC3B6E,EAAsB7E,EAAI9J,OAG3B+O,EAAOG,YAAYpI,KAAK4C,UAAU,CACjC4E,SAAUP,EAAIO,SACdG,KAAMV,EAAIU,KACVU,gBAAgB,UAIjBR,EAAsBxE,EAAEiF,UAAUrB,EAAIU,KAAMV,EAAIZ,QAASY,EAAIO,gBAlB7DK,EAAsBxE,EAAEG,KAAKC,OAAOwD,EAAIU,QA0C1CW,UAAW,SAAUrP,EAAMoN,EAASmB,OAC/BP,EAAM,CACTU,KAAM1O,EACNoN,QAASA,EACTmB,SAAUA,UAEXnE,EAAE8D,MAAMzQ,IAAI,kBAAmBuQ,GAC/BA,EAAIvD,OAASL,EAAEkF,SAAStB,EAAIU,KAAMV,EAAIZ,SACtChD,EAAE8D,MAAMzQ,IAAI,iBAAkBuQ,GACvBtD,EAAMf,UAAUS,EAAEG,KAAKC,OAAOwD,EAAIvD,QAASuD,EAAIO,WA2BvDe,SAAU,SAAStP,EAAMoN,OACpBmC,EAAOnC,EAAQmC,QACfA,EAAM,KACJ,IAAIlC,KAASkC,EACjBnC,EAAQC,GAASkC,EAAKlC,UAGhBD,EAAQmC,SAGZC,EAAY,IAAIC,SACpBC,EAASF,EAAWA,EAAUG,KAAM3P,GAEpC4P,EAAa5P,EAAMwP,EAAWpC,EAASoC,EAAUG,KAAM,YA8ZxCE,WACZC,EAAQ,GACR1Q,EAAOyQ,EAAKF,KAAKI,KACd3Q,IAASyQ,EAAKG,MACpBF,EAAMjR,KAAKO,EAAKwB,OAChBxB,EAAOA,EAAK2Q,YAEND,EAnaCG,CAAQT,IAQhBtB,MAAO,CACNgC,IAAK,GAcLnN,IAAK,SAAUlD,EAAMnB,OAChBwP,EAAQ9D,EAAE8D,MAAMgC,IAEpBhC,EAAMrO,GAAQqO,EAAMrO,IAAS,GAE7BqO,EAAMrO,GAAMhB,KAAKH,IAYlBjB,IAAK,SAAUoC,EAAMmO,OAChBlP,EAAYsL,EAAE8D,MAAMgC,IAAIrQ,MAEvBf,GAAcA,EAAU6D,WAIxB,IAASjE,EAALgE,EAAE,EAAahE,EAAWI,EAAU4D,MAC5ChE,EAASsP,KAKZtD,MAAOA,YAqBCA,EAAMxE,EAAMyE,EAASC,EAAOuF,QAU/BjK,KAAOA,OASPyE,QAAUA,OAQVC,MAAQA,OAERjI,OAAqC,GAA3BwN,GAAc,IAAIxN,gBA8EzByN,EAAaC,EAASC,EAAKtQ,EAAMuQ,GACzCF,EAAQG,UAAYF,MAChBvE,EAAQsE,EAAQhE,KAAKrM,MACrB+L,GAASwE,GAAcxE,EAAM,GAAI,KAEhC0E,EAAmB1E,EAAM,GAAGpJ,OAChCoJ,EAAM5F,OAASsK,EACf1E,EAAM,GAAKA,EAAM,GAAGb,MAAMuF,UAEpB1E,WAiBC6D,EAAa5P,EAAMwP,EAAWpC,EAASsD,EAAWC,EAAUC,OAC/D,IAAIvD,KAASD,KACZA,EAAQ3B,eAAe4B,IAAWD,EAAQC,QAI3CwD,EAAWzD,EAAQC,GACvBwD,EAAW5P,MAAM4J,QAAQgG,GAAYA,EAAW,CAACA,OAE5C,IAAIC,EAAI,EAAGA,EAAID,EAASlO,SAAUmO,EAAG,IACrCF,GAAWA,EAAQG,OAAS1D,EAAQ,IAAMyD,aAI1CE,EAAaH,EAASC,GACzB7D,EAAS+D,EAAW/D,OACpBsD,IAAeS,EAAWT,WAC1BU,IAAWD,EAAWC,OACtBrG,EAAQoG,EAAWpG,SAEhBqG,IAAWD,EAAWX,QAAQa,OAAQ,KAErCC,EAAQH,EAAWX,QAAQrF,WAAWe,MAAM,aAAa,GAC7DiF,EAAWX,QAAUe,OAAOJ,EAAWX,QAAQgB,OAAQF,EAAQ,aAI5Dd,EAAUW,EAAWX,SAAWW,EAG/BM,EAAcZ,EAAUX,KAAMO,EAAMK,EACxCW,IAAgB9B,EAAUQ,QAItBY,GAAWN,GAAOM,EAAQW,OAH9BjB,GAAOgB,EAAY1Q,MAAM+B,OAAQ2O,EAAcA,EAAYvB,KAC1D,KAMGyB,EAAMF,EAAY1Q,SAElB4O,EAAU7M,OAAS3C,EAAK2C,mBAKxB6O,aAAe9G,QAKfqB,EADA0F,EAAc,KAGdR,EAAQ,MACXlF,EAAQqE,EAAaC,EAASC,EAAKtQ,EAAMuQ,cAKrCrP,EAAO6K,EAAM5F,MACbuL,EAAK3F,EAAM5F,MAAQ4F,EAAM,GAAGpJ,OAC5BS,EAAIkN,MAGRlN,GAAKkO,EAAY1Q,MAAM+B,OAChBzB,GAAQkC,GAEdA,IADAkO,EAAcA,EAAYvB,MACTnP,MAAM+B,UAIxB2N,EADAlN,GAAKkO,EAAY1Q,MAAM+B,OAInB2O,EAAY1Q,iBAAiB8J,eAMhC,IAAIiH,EAAIL,EACRK,IAAMnC,EAAUQ,OAAS5M,EAAIsO,GAAyB,iBAAZC,EAAE/Q,OAC5C+Q,EAAIA,EAAE5B,KAEN0B,IACArO,GAAKuO,EAAE/Q,MAAM+B,OAEd8O,IAGAD,EAAMxR,EAAKkL,MAAMoF,EAAKlN,GACtB2I,EAAM5F,OAASmK,YAEfvE,EAAQqE,EAAaC,EAAS,EAAGmB,EAAKjB,aAMnCrP,EAAO6K,EAAM5F,UAChByL,EAAW7F,EAAM,GACjBmB,EAASsE,EAAItG,MAAM,EAAGhK,GACtB2Q,EAAQL,EAAItG,MAAMhK,EAAO0Q,EAASjP,QAE/B4O,EAAQjB,EAAMkB,EAAI7O,OAClBiO,GAAWW,EAAQX,EAAQW,QAC9BX,EAAQW,MAAQA,OAGbO,EAAaR,EAAYS,KAEzB7E,IACH4E,EAAapC,EAASF,EAAWsC,EAAY5E,GAC7CoD,GAAOpD,EAAOvK,QAGfqP,EAAYxC,EAAWsC,EAAYL,GAGnCH,EAAc5B,EAASF,EAAWsC,EADpB,IAAIpH,EAAM2C,EAAOJ,EAAS7C,EAAEkF,SAASsC,EAAU3E,GAAU2E,EAAUhH,EAAOgH,IAGpFC,GACHnC,EAASF,EAAW8B,EAAaO,GAG9BJ,EAAc,GAGjB7B,EAAa5P,EAAMwP,EAAWpC,EAASkE,EAAYS,KAAMzB,EAAK,CAC7DS,MAAO1D,EAAQ,IAAMyD,EACrBS,MAAOA,iBAqBJ9B,QAEJE,EAAO,CAAE/O,MAAO,KAAMmR,KAAM,KAAMhC,KAAM,MAExCC,EAAO,CAAEpP,MAAO,KAAMmR,KAAMpC,EAAMI,KAAM,MAC5CJ,EAAKI,KAAOC,OAGPL,KAAOA,OAEPK,KAAOA,OACPrN,OAAS,WAWN+M,EAASG,EAAMzQ,EAAMwB,OAEzBmP,EAAO3Q,EAAK2Q,KAEZkC,EAAU,CAAErR,MAAOA,EAAOmR,KAAM3S,EAAM2Q,KAAMA,UAChD3Q,EAAK2Q,KAAOkC,EACZlC,EAAKgC,KAAOE,EACZpC,EAAKlN,SAEEsP,WASCD,EAAYnC,EAAMzQ,EAAM8S,WAC5BnC,EAAO3Q,EAAK2Q,KACPrN,EAAI,EAAGA,EAAIwP,GAASnC,IAASF,EAAKG,KAAMtN,IAChDqN,EAAOA,EAAKA,KAEb3Q,EAAK2Q,KAAOA,EACZA,EAAKgC,KAAO3S,EACZyQ,EAAKlN,QAAUD,KA9VhBuH,EAAMD,MAAQI,EA+EdM,EAAMf,UAAY,SAASA,EAAU9F,EAAG0K,MACvB,iBAAL1K,SACHA,KAEJ5C,MAAM4J,QAAQhH,GAAI,KACjBgE,EAAI,UACRhE,EAAE7F,SAAQ,SAAUmU,GACnBtK,GAAK8B,EAAUwI,EAAG5D,MAEZ1G,MAGJmG,EAAM,CACT9H,KAAMrC,EAAEqC,KACRyE,QAAShB,EAAU9F,EAAE8G,QAAS4D,GAC9B6D,IAAK,OACLC,QAAS,CAAC,QAASxO,EAAEqC,MACrBoM,WAAY,GACZ/D,SAAUA,GAGPgE,EAAU1O,EAAE+G,MACZ2H,IACCtR,MAAM4J,QAAQ0H,GACjBtR,MAAM8J,UAAUlM,KAAKuP,MAAMJ,EAAIqE,QAASE,GAExCvE,EAAIqE,QAAQxT,KAAK0T,IAInBnI,EAAE8D,MAAMzQ,IAAI,OAAQuQ,OAEhBsE,EAAa,OACZ,IAAIzS,KAAQmO,EAAIsE,WACpBA,GAAc,IAAMzS,EAAO,MAAQmO,EAAIsE,WAAWzS,IAAS,IAAIiL,QAAQ,KAAM,UAAY,UAGnF,IAAMkD,EAAIoE,IAAM,WAAapE,EAAIqE,QAAQG,KAAK,KAAO,IAAMF,EAAa,IAAMtE,EAAIrD,QAAU,KAAOqD,EAAIoE,IAAM,MA4PhHnI,EAAMnK,gBACLmK,EAAMzJ,kBAKN4J,EAAEE,6BAENL,EAAMzJ,iBAAiB,WAAW,SAAUuJ,OACvC0I,EAAU1L,KAAKC,MAAM+C,EAAI9J,MAC5BiK,EAAOuI,EAAQlE,SACfG,EAAO+D,EAAQ/D,KACfU,EAAiBqD,EAAQrD,eAE1BnF,EAAMkF,YAAY/E,EAAEiF,UAAUX,EAAMtE,EAAE0C,UAAU5C,GAAOA,IACnDkF,GACHnF,EAAMyI,WAEL,GAGGtI,GAlBCA,MAsBLuI,EAASvI,EAAEG,KAAK0B,yBAUX2G,IACHxI,EAAEC,QACND,EAAEwD,kBAVA+E,IACHvI,EAAE6E,SAAW0D,EAAOvG,IAEhBuG,EAAOE,aAAa,iBACvBzI,EAAEC,QAAS,KAURD,EAAEC,OAAQ,KAOVyI,EAAahT,SAASgT,WACP,YAAfA,GAA2C,gBAAfA,GAAgCH,GAAUA,EAAOI,MAChFjT,SAASU,iBAAiB,mBAAoBoS,GAE1C/L,OAAOmM,sBACVnM,OAAOmM,sBAAsBJ,GAE7B/L,OAAOoM,WAAWL,EAAgC,WAK9CxI,EA5lCM,CAhBkB,oBAAXvD,OACjBA,OAE6B,oBAAtBqM,mBAAqCC,gBAAgBD,kBAC3DC,KACA;;;;;;;;OA2mCiCC,EAAOC,UAC3CD,UAAiBpJ,QAII,IAAXkH,KACVA,GAAOlH,MAAQA,GAyDhBA,EAAM8C,UAAUwG,OAAS,SACb,yBACD,yBACC,CAEVjD,QAAS,uHACTY,QAAQ,EACRhE,OAAQ,mBACY,CAClBoD,QAAS,sBACTE,YAAY,EACZU,QAAQ,EACRhE,OAAQ,aAEC,CACToD,QAAS,kBACTY,QAAQ,eAEM,6BACA,gBACP,qBAGD,8BACF,CACNZ,QAAS,uHACTY,QAAQ,EACRhE,OAAQ,KACA,CACNoD,QAAS,iBACTpD,OAAQ,aACQ,kBACF,8BAGD,CACboD,QAAS,qCACTpD,OAAQ,aACQ,CACd,CACCoD,QAAS,KACTzF,MAAO,eAER,qBAIY,mBACF,CACZyF,QAAS,YACTpD,OAAQ,WACM,0BAMP,CACT,CACCoD,QAAS,kBACTzF,MAAO,gBAER,uBAIFZ,EAAM8C,UAAUwG,OAAhB,IAA8BrG,OAAO,cAAcA,OAAnD,OACCjD,EAAM8C,UAAUwG,OAAhB,OACDtJ,EAAM8C,UAAUwG,OAAhB,QAAkCrG,OAAO,mBAAmBA,OAASjD,EAAM8C,UAAUwG,OAGrFtJ,EAAMkE,MAAMnL,IAAI,QAAQ,SAAUiL,GAEhB,WAAbA,EAAI9H,OACP8H,EAAIsE,WAAJ,MAA0BtE,EAAIrD,QAAQG,QAAQ,QAAS,SAIzDlN,OAAOwN,eAAepB,EAAM8C,UAAUwG,OAAOlB,IAAK,aAAc,CAY/DxR,MAAO,SAAoB2S,EAASrJ,OAC/BsJ,EAAsB,GAC1BA,EAAoB,YAActJ,GAAQ,CACzCmG,QAAS,oCACTE,YAAY,EACZtD,OAAQjD,EAAM8C,UAAU5C,IAEzBsJ,EAAmB,MAAY,2BAE3BvG,EAAS,kBACM,CACjBoD,QAAS,4BACTpD,OAAQuG,IAGVvG,EAAO,YAAc/C,GAAQ,CAC5BmG,QAAS,UACTpD,OAAQjD,EAAM8C,UAAU5C,QAGrBuJ,EAAM,GACVA,EAAIF,GAAW,CACdlD,QAASe,OAAO,wFAAwFC,OAAOvG,QAAQ,OAAO,kBAAqByI,KAAa,KAChKhD,YAAY,EACZU,QAAQ,EACRhE,OAAQA,GAGTjD,EAAM8C,UAAUtN,aAAa,SAAU,QAASiU,MAIlDzJ,EAAM8C,UAAU4G,KAAO1J,EAAM8C,UAAUwG,OACvCtJ,EAAM8C,UAAU6G,OAAS3J,EAAM8C,UAAUwG,OACzCtJ,EAAM8C,UAAU8G,IAAM5J,EAAM8C,UAAUwG,OAEtCtJ,EAAM8C,UAAU+G,IAAM7J,EAAM8C,UAAUC,OAAO,SAAU,IACvD/C,EAAM8C,UAAUgH,KAAO9J,EAAM8C,UAAU+G,IACvC7J,EAAM8C,UAAUiH,KAAO/J,EAAM8C,UAAU+G,IACvC7J,EAAM8C,UAAUkH,IAAMhK,EAAM8C,UAAU+G,aAO3B7J,OAENiK,EAAS,gDAEbjK,EAAM8C,UAAUoH,IAAM,SACV,0BACD,CACT7D,QAAS,iDACTpD,OAAQ,MACC,wCACsB,CAC7BoD,QAAS,4FACTE,YAAY,EACZ3F,MAAO,oBAEG,CACVyF,QAAS,yCACTE,YAAY,SAKR,CAENF,QAASe,OAAO,eAAiB6C,EAAO5C,OAAS,IAAM,8BAA8BA,OAAS,OAAQ,KACtGJ,QAAQ,EACRhE,OAAQ,UACK,oBACG,iBACL,CACToD,QAASe,OAAO,IAAM6C,EAAO5C,OAAS,KACtCzG,MAAO,kBAIEwG,OAAO,0CAA4C6C,EAAO5C,OAAS,wBACrE,CACThB,QAAS4D,EACThD,QAAQ,YAEG,yEACC,yBACD,gCACG,aAGhBjH,EAAM8C,UAAUoH,IAAhB,OAA8BjH,OAAOsC,KAAOvF,EAAM8C,UAAUoH,QAExDZ,EAAStJ,EAAM8C,UAAUwG,OACzBA,IACHA,EAAOlB,IAAI+B,WAAW,QAAS,OAE/BnK,EAAM8C,UAAUtN,aAAa,SAAU,aAAc,cACtC,CACb6Q,QAAS,6CACTE,YAAY,EACZtD,OAAQ,cACO,CACboD,QAAS,qCACTpD,OAAQ,OACE,CACRoD,QAAS,yBACTE,YAAY,EACZ3F,MAAO,eACPqC,OAAQjD,EAAM8C,UAAUoH,iBAEV,CACd,CACC7D,QAAS,KACTzF,MAAO,eAER,qBAIU,aAGb0I,EAAOlB,OAGVpI,GAOFA,EAAM8C,UAAUsH,MAAQ,SACZ,CACV,CACC/D,QAAS,kCACTE,YAAY,EACZU,QAAQ,GAET,CACCZ,QAAS,mBACTE,YAAY,EACZU,QAAQ,WAGA,CACTZ,QAAS,iDACTY,QAAQ,gBAEK,CACbZ,QAAS,2FACTE,YAAY,EACZtD,OAAQ,aACQ,kBAGN,qHACA,8BACC,mBACF,qEACE,2DACG,iBAQhBjD,EAAM8C,UAAUuH,WAAarK,EAAM8C,UAAUC,OAAO,QAAS,cAC9C,CACb/C,EAAM8C,UAAUsH,MAAM,cACtB,CACC/D,QAAS,0GACTE,YAAY,YAGH,CACV,CACCF,QAAS,kCACTE,YAAY,GAEb,CACCF,QAAS,oZACTE,YAAY,aAIF,2GACF,yOACE,8FAGbvG,EAAM8C,UAAUuH,WAAW,cAAc,GAAGhE,QAAU,uEAEtDrG,EAAM8C,UAAUtN,aAAa,aAAc,UAAW,OAC5C,CACR6Q,QAAS,uLACTE,YAAY,EACZU,QAAQ,EACRhE,OAAQ,gBACS,CACfoD,QAAS,4BACTE,YAAY,EACZ3F,MAAO,iBACPqC,OAAQjD,EAAM8C,UAAUwH,qBAEV,4BACI,gCAIA,CACpBjE,QAAS,gMACTzF,MAAO,sBAEK,CACZ,CACCyF,QAAS,sIACTE,YAAY,EACZtD,OAAQjD,EAAM8C,UAAUuH,YAEzB,CACChE,QAAS,mEACTpD,OAAQjD,EAAM8C,UAAUuH,YAEzB,CACChE,QAAS,kEACTE,YAAY,EACZtD,OAAQjD,EAAM8C,UAAUuH,YAEzB,CACChE,QAAS,8eACTE,YAAY,EACZtD,OAAQjD,EAAM8C,UAAUuH,sBAGd,8BAGbrK,EAAM8C,UAAUtN,aAAa,aAAc,SAAU,mBACjC,CAClB6Q,QAAS,oEACTY,QAAQ,EACRhE,OAAQ,wBACiB,CACvBoD,QAAS,QACTzF,MAAO,wBAES,CAChByF,QAAS,6DACTE,YAAY,EACZtD,OAAQ,6BACsB,CAC5BoD,QAAS,UACTzF,MAAO,eAER2E,KAAMvF,EAAM8C,UAAUuH,oBAGd,cAKTrK,EAAM8C,UAAUwG,QACnBtJ,EAAM8C,UAAUwG,OAAOlB,IAAI+B,WAAW,SAAU,cAGjDnK,EAAM8C,UAAUyH,GAAKvK,EAAM8C,UAAUuH,yBAQhB,oBAATlB,MAAyBA,KAAKnJ,OAAUmJ,KAAKrT,UAKnD0U,QAAQzJ,UAAU0J,UACtBD,QAAQzJ,UAAU0J,QAAUD,QAAQzJ,UAAU2J,mBAAqBF,QAAQzJ,UAAU4J,2BAGlF3K,EAAQnD,OAAOmD,MAQf4K,EAAa,IACV,gBACA,YACA,WACC,kBACC,gBACF,WACC,UACF,QACE,SAGJC,EAAc,kBACdC,EAAiB,UACjBC,EAAgB,SAGhBC,EAAW,iFAGX9K,EAAO,8BAgBXF,EAAMkE,MAAMnL,IAAI,uBAAuB,SAAUiL,GAChDA,EAAIC,UAAY,KAAO+G,KAGxBhL,EAAMkE,MAAMnL,IAAI,uBAAuB,SAAUiL,OAC5CiH,EAAqCjH,EAAIpO,WACzCqV,EAAIR,QAAQO,GAAW,CAC1BhH,EAAIU,KAAO,GAEXuG,EAAIlU,aAAa8T,EAAaC,OAG1BpG,EAAOuG,EAAI5V,YAAYS,SAASC,cAAc,SAClD2O,EAAKC,YAvDe,eAyDhBvC,EAAM6I,EAAInU,aAAa,YAEvByN,EAAWP,EAAIO,YACF,SAAbA,EAAqB,KAGpB2G,GAAa,WAAW7I,KAAKD,IAAQ,EAAG,SAAS,GACrDmC,EAAWqG,EAAWM,IAAcA,EAIrCC,EAAiBzG,EAAMH,GACvB4G,EAAiBF,EAAK1G,OAGlB6G,EAAapL,EAAM2D,QAAQyH,WAC3BA,GACHA,EAAWC,cAAc9G,OAItB+G,EAAM,IAAIC,eACdD,EAAIE,KAAK,MAAOpJ,GAAK,GACrBkJ,EAAIG,mBAAqB,WA/EL,IAAUC,EAAQjD,EAgFf,GAAlB6C,EAAIxC,aACHwC,EAAII,OAAS,KAAOJ,EAAIK,cAE3BV,EAAIlU,aAAa8T,EAAaE,GAG9BrG,EAAKC,YAAc2G,EAAIK,aACvB3L,EAAMsE,iBAAiBI,KAIvBuG,EAAIlU,aAAa8T,EAvEF,UAyEXS,EAAII,QAAU,IACjBhH,EAAKC,aA9FqB+G,EA8FSJ,EAAII,OA9FLjD,EA8Fa6C,EAAIM,WA7FjD,WAAaF,EAAS,yBAA2BjD,GA+FnD/D,EAAKC,YA7FiB,8CAkG1B2G,EAAIO,KAAK,UAIX7L,EAAM2D,QAAQmI,cAAgB,CAQ7BzG,UAAW,SAAmBtB,WAGbnO,EAFZuO,GAAYJ,GAAajO,UAAUuO,iBAAiB2G,GAE/CtS,EAAI,EAAY9C,EAAUuO,EAASzL,MAC3CsH,EAAMsE,iBAAiB1O,SAKtBmW,GAAS,EAEb/L,EAAM8L,cAAgB,WAChBC,IACJC,QAAQC,KAAK,2FACbF,GAAS,GAEV/L,EAAM2D,QAAQmI,cAAczG,UAAUjB,MAAMpI,KAAMkQ,qBA/F1Cf,EAAiBvV,EAAS2O,OAC9B1C,EAAYjM,EAAQiM,UACxBA,EAAYA,EAAUf,QAAQZ,EAAM,KAAO,aAAeqE,EAC1D3O,EAAQiM,UAAYA,EAAUf,QAAQ,OAAQ,KAAKqL,mNCjlDxCC,GAAY,SAACC,OAAKC,yDAAU,GAC/BC,EAAS,4CAA4ClK,KAAKgK,OAC5DE,EAAQ,MAAO,OAEbC,EAAIC,SAASF,EAAO,GAAI,IACxBG,EAAID,SAASF,EAAO,GAAI,IACxBlY,EAAIoY,SAASF,EAAO,GAAI,yBAEfC,eAAME,eAAMrY,eAAMiY,QCTxBK,+9GA+KAC,GAAU,SAAAC,+CAEKA,EAAU5O,gDACvB4O,EAAU3N,qCACT2N,EAAU1N,qCACX0N,EAAUzN,qCACTyN,EAAU3O,yCACR2O,EAAU1O,uCACX0O,EAAUxN,sGAE2C+M,GAAUS,EAAU7N,+BAAsB6N,EAAUnO,oGACrD0N,GAAUS,EAAU5N,8BAAqB4N,EAAUlO,mGACnDyN,GAAUS,EAAUjO,8BAAqBiO,EAAUvO,oGAClD8N,GAAUS,EAAUhO,+BAAsBgO,EAAUtO,mGACtD6N,GAAUS,EAAU/N,6BAAoB+N,EAAUrO,oGAC/C4N,GAAUS,EAAU9N,gCAAuB8N,EAAUpO,4CAU/GqO,GAA2B,SAAAD,OAE9BnD,iOASRiD,+CAKAC,GAAQC,2BAIAE,EAAO,IAAIC,KAAK,CAACtD,GAAO,CAACxN,KAAM,qBAC9BW,OAAOoQ,IAAIC,gBAAgBH,IC/NzBI,GAAkB,SAAAxM,OACrByM,EAAWtX,SAASC,cAAc,YACxCqX,EAASzI,YAAchE,EACvB7K,SAASuX,KAAKnY,OAAOkY,GACrBA,EAASE,SACTxX,SAASyX,YAAY,QACrBH,EAASI,miCCyDoCV,GAAyBzT,mTAjBlCA,iFAaDA,sIAbCA,wBAaDA,kBAIUyT,GAAyBzT,4GAlDtEwD,OAAOmD,MAAQnD,OAAOmD,cAGlB6M,KAEAnD,EAAO,GACPQ,EAAM,GAENuD,EAAc,KAMlBhZ,GAAMO,WAAU,SAAA0Y,OACZb,EAAYa,OACZhE,EAAO1J,GAAMqF,oBAAauH,GAAQC,IAAc7M,GAAM8C,UAAU4G,KAAM,aACtEQ,EAAMlK,GAAMqF,UAAUsH,GAAW3M,GAAM8C,UAAUoH,IAAK,qCAY5BiD,GAAgBP,GAAQC,uDAGjBY,oBAWHN,GAAgBR,gMCzCyDtT,KAAOqF,mBACTrF,KAAOsF,kBACPtF,KAAOiF,kBACLjF,KAAOkF,mBACXlF,KAAOmF,iBACDnF,KAAOoF,qRAL/C2N,GAAU/S,KAAO2F,iGAClBoN,GAAU/S,KAAO4F,gGACjBmN,GAAU/S,KAAOuF,iGAChBwN,GAAU/S,KAAOwF,gGACnBuN,GAAU/S,KAAOyF,iGACdsN,GAAU/S,KAAO0F,mDAb5D1F,KAAO4E,8CACpB5E,KAAO6F,2BACN7F,KAAO8F,2BACR9F,KAAO+F,6BACJ/F,KAAO8E,6BACT9E,KAAO6E,4BACN7E,KAAOgG,2PAEoFhG,KAAOqF,sDAA7C0N,GAAU/S,KAAO2F,+BACmB3F,KAAOsF,qDAA5CyN,GAAU/S,KAAO4F,8BACoB5F,KAAOiF,qDAA5C8N,GAAU/S,KAAOuF,8BACsBvF,KAAOkF,sDAA7C6N,GAAU/S,KAAOwF,+BACiBxF,KAAOmF,oDAA3C4N,GAAU/S,KAAOyF,6BACyBzF,KAAOoF,uDAA9C2N,GAAU/S,KAAO0F,iDAb5D1F,KAAO4E,mEACpB5E,KAAO6F,gCACN7F,KAAO8F,gCACR9F,KAAO+F,kCACJ/F,KAAO8E,kCACT9E,KAAO6E,iCACN7E,KAAOgG,+/BCff,4HAAA,CAAQ,CACnBlK,OAAQW,SAASuX,KACjBnS,MAAO"}